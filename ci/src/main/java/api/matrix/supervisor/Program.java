// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/supervisor/program.proto

package api.matrix.supervisor;

public final class Program {
  private Program() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Copy from matrixapis
   * </pre>
   *
   * Protobuf enum {@code api.supervisor.StopSignal}
   */
  public enum StopSignal
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STOP_SIGNAL_TERM = 0;</code>
     */
    STOP_SIGNAL_TERM(0),
    /**
     * <code>STOP_SIGNAL_INT = 1;</code>
     */
    STOP_SIGNAL_INT(1),
    /**
     * <code>STOP_SIGNAL_HUP = 2;</code>
     */
    STOP_SIGNAL_HUP(2),
    /**
     * <code>STOP_SIGNAL_QUIT = 3;</code>
     */
    STOP_SIGNAL_QUIT(3),
    /**
     * <code>STOP_SIGNAL_KILL = 4;</code>
     */
    STOP_SIGNAL_KILL(4),
    /**
     * <code>STOP_SIGNAL_USR1 = 5;</code>
     */
    STOP_SIGNAL_USR1(5),
    /**
     * <code>STOP_SIGNAL_USR2 = 6;</code>
     */
    STOP_SIGNAL_USR2(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STOP_SIGNAL_TERM = 0;</code>
     */
    public static final int STOP_SIGNAL_TERM_VALUE = 0;
    /**
     * <code>STOP_SIGNAL_INT = 1;</code>
     */
    public static final int STOP_SIGNAL_INT_VALUE = 1;
    /**
     * <code>STOP_SIGNAL_HUP = 2;</code>
     */
    public static final int STOP_SIGNAL_HUP_VALUE = 2;
    /**
     * <code>STOP_SIGNAL_QUIT = 3;</code>
     */
    public static final int STOP_SIGNAL_QUIT_VALUE = 3;
    /**
     * <code>STOP_SIGNAL_KILL = 4;</code>
     */
    public static final int STOP_SIGNAL_KILL_VALUE = 4;
    /**
     * <code>STOP_SIGNAL_USR1 = 5;</code>
     */
    public static final int STOP_SIGNAL_USR1_VALUE = 5;
    /**
     * <code>STOP_SIGNAL_USR2 = 6;</code>
     */
    public static final int STOP_SIGNAL_USR2_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StopSignal valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static StopSignal forNumber(int value) {
      switch (value) {
        case 0: return STOP_SIGNAL_TERM;
        case 1: return STOP_SIGNAL_INT;
        case 2: return STOP_SIGNAL_HUP;
        case 3: return STOP_SIGNAL_QUIT;
        case 4: return STOP_SIGNAL_KILL;
        case 5: return STOP_SIGNAL_USR1;
        case 6: return STOP_SIGNAL_USR2;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StopSignal>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StopSignal> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StopSignal>() {
            public StopSignal findValueByNumber(int number) {
              return StopSignal.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.getDescriptor().getEnumTypes().get(0);
    }

    private static final StopSignal[] VALUES = values();

    public static StopSignal valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StopSignal(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:api.supervisor.StopSignal)
  }

  /**
   * Protobuf enum {@code api.supervisor.AutoStart}
   */
  public enum AutoStart
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AUTO_START_YES = 0;</code>
     */
    AUTO_START_YES(0),
    /**
     * <code>AUTO_START_NO = 1;</code>
     */
    AUTO_START_NO(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AUTO_START_YES = 0;</code>
     */
    public static final int AUTO_START_YES_VALUE = 0;
    /**
     * <code>AUTO_START_NO = 1;</code>
     */
    public static final int AUTO_START_NO_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutoStart valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AutoStart forNumber(int value) {
      switch (value) {
        case 0: return AUTO_START_YES;
        case 1: return AUTO_START_NO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AutoStart>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AutoStart> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AutoStart>() {
            public AutoStart findValueByNumber(int number) {
              return AutoStart.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.getDescriptor().getEnumTypes().get(1);
    }

    private static final AutoStart[] VALUES = values();

    public static AutoStart valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AutoStart(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:api.supervisor.AutoStart)
  }

  /**
   * Protobuf enum {@code api.supervisor.AutoRestart}
   */
  public enum AutoRestart
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AUTO_RESTART_UNEXPECTED = 0;</code>
     */
    AUTO_RESTART_UNEXPECTED(0),
    /**
     * <code>AUTO_RESTART_YES = 1;</code>
     */
    AUTO_RESTART_YES(1),
    /**
     * <code>AUTO_RESTART_NO = 2;</code>
     */
    AUTO_RESTART_NO(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AUTO_RESTART_UNEXPECTED = 0;</code>
     */
    public static final int AUTO_RESTART_UNEXPECTED_VALUE = 0;
    /**
     * <code>AUTO_RESTART_YES = 1;</code>
     */
    public static final int AUTO_RESTART_YES_VALUE = 1;
    /**
     * <code>AUTO_RESTART_NO = 2;</code>
     */
    public static final int AUTO_RESTART_NO_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutoRestart valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AutoRestart forNumber(int value) {
      switch (value) {
        case 0: return AUTO_RESTART_UNEXPECTED;
        case 1: return AUTO_RESTART_YES;
        case 2: return AUTO_RESTART_NO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AutoRestart>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AutoRestart> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AutoRestart>() {
            public AutoRestart findValueByNumber(int number) {
              return AutoRestart.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.getDescriptor().getEnumTypes().get(2);
    }

    private static final AutoRestart[] VALUES = values();

    public static AutoRestart valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AutoRestart(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:api.supervisor.AutoRestart)
  }

  public interface ProgramConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:api.supervisor.ProgramConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * command: The command that will be run when this program is started. The command can be either absolute
     * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
     * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
     * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
     * "foo bar". Note that the value of command may include Python string expressions,
     * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
     * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
     * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
     * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
     * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
     * Required: Yes
     * Note:
     *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
     *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
     *     does not parse the command like a shell would.
     * </pre>
     *
     * <code>string command = 1 [(.validate.rules) = { ... }</code>
     * @return The command.
     */
    java.lang.String getCommand();
    /**
     * <pre>
     * command: The command that will be run when this program is started. The command can be either absolute
     * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
     * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
     * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
     * "foo bar". Note that the value of command may include Python string expressions,
     * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
     * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
     * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
     * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
     * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
     * Required: Yes
     * Note:
     *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
     *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
     *     does not parse the command like a shell would.
     * </pre>
     *
     * <code>string command = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for command.
     */
    com.google.protobuf.ByteString
        getCommandBytes();

    /**
     * <pre>
     * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
     * child.
     * Default: No chdir (inherit supervisor’s)
     * </pre>
     *
     * <code>string directory = 2;</code>
     * @return The directory.
     */
    java.lang.String getDirectory();
    /**
     * <pre>
     * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
     * child.
     * Default: No chdir (inherit supervisor’s)
     * </pre>
     *
     * <code>string directory = 2;</code>
     * @return The bytes for directory.
     */
    com.google.protobuf.ByteString
        getDirectoryBytes();

    /**
     * <pre>
     * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
     * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
     * Default: TERM
     * </pre>
     *
     * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
     * @return The enum numeric value on the wire for stopSignal.
     */
    int getStopSignalValue();
    /**
     * <pre>
     * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
     * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
     * Default: TERM
     * </pre>
     *
     * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
     * @return The stopSignal.
     */
    api.matrix.supervisor.Program.StopSignal getStopSignal();

    /**
     * <pre>
     * stopwaitsecs: The number of seconds to wait for the OS to return a SIGCHLD to supervisord after the program has
     * been sent a stopsignal. If this number of seconds elapses before supervisord receives a SIGCHLD from the process,
     * supervisord will attempt to kill it with a final SIGKILL.
     * Default: 10
     * </pre>
     *
     * <code>int32 stop_wait_sec = 4;</code>
     * @return The stopWaitSec.
     */
    int getStopWaitSec();

    /**
     * <pre>
     * stopasgroup: If true, the flag causes supervisor to send the stop signal to the whole process group and implies
     * killasgroup is true. This is useful for programs, such as Flask in debug mode, that do not propagate stop signals
     * to their children, leaving them orphaned.
     * Default: false
     * </pre>
     *
     * <code>bool stop_as_group = 5;</code>
     * @return The stopAsGroup.
     */
    boolean getStopAsGroup();

    /**
     * <pre>
     * killasgroup: If true, when resorting to send SIGKILL to the program to terminate it send it to its whole process
     * group instead, taking care of its children as well, useful e.g with Python programs using multiprocessing.
     * Default: false
     * </pre>
     *
     * <code>bool kill_as_group = 6;</code>
     * @return The killAsGroup.
     */
    boolean getKillAsGroup();

    /**
     * <pre>
     * redirect_stderr: If true, cause the process’ stderr output to be sent back to supervisord on its stdout file
     * descriptor (in UNIX shell terms, this is the equivalent of executing /the/program 2&gt;&amp;1).
     * Default: false
     * </pre>
     *
     * <code>bool redirect_stderr = 7;</code>
     * @return The redirectStderr.
     */
    boolean getRedirectStderr();

    /**
     * <pre>
     * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
     * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
     * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
     * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
     * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
     * here (the directory of the supervisord config file).
     * Note:
     *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
     *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
     *     by setting stdout_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stdout_logfile = 8;</code>
     * @return The stdoutLogfile.
     */
    java.lang.String getStdoutLogfile();
    /**
     * <pre>
     * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
     * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
     * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
     * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
     * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
     * here (the directory of the supervisord config file).
     * Note:
     *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
     *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
     *     by setting stdout_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stdout_logfile = 8;</code>
     * @return The bytes for stdoutLogfile.
     */
    com.google.protobuf.ByteString
        getStdoutLogfileBytes();

    /**
     * <pre>
     * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
     * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
     * unlimited log size.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stdout_logfile_maxbytes = 9;</code>
     * @return The stdoutLogfileMaxbytes.
     */
    java.lang.String getStdoutLogfileMaxbytes();
    /**
     * <pre>
     * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
     * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
     * unlimited log size.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stdout_logfile_maxbytes = 9;</code>
     * @return The bytes for stdoutLogfileMaxbytes.
     */
    com.google.protobuf.ByteString
        getStdoutLogfileMaxbytesBytes();

    /**
     * <pre>
     * stdout_logfile_backups: The number of stdout_logfile backups to keep around resulting from process stdout log file
     * rotation. If set to -1, no backups will be kept.
     * Default: 0 means 10
     * </pre>
     *
     * <code>int32 stdout_logfile_backups = 10;</code>
     * @return The stdoutLogfileBackups.
     */
    int getStdoutLogfileBackups();

    /**
     * <pre>
     * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
     * as stdout_logfile and may contain the same Python string expressions.
     * Note:
     *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
     *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
     *     by setting stderr_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stderr_logfile = 11;</code>
     * @return The stderrLogfile.
     */
    java.lang.String getStderrLogfile();
    /**
     * <pre>
     * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
     * as stdout_logfile and may contain the same Python string expressions.
     * Note:
     *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
     *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
     *     by setting stderr_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stderr_logfile = 11;</code>
     * @return The bytes for stderrLogfile.
     */
    com.google.protobuf.ByteString
        getStderrLogfileBytes();

    /**
     * <pre>
     * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
     * value types as stdout_logfile_maxbytes.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stderr_logfile_maxbytes = 12;</code>
     * @return The stderrLogfileMaxbytes.
     */
    java.lang.String getStderrLogfileMaxbytes();
    /**
     * <pre>
     * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
     * value types as stdout_logfile_maxbytes.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stderr_logfile_maxbytes = 12;</code>
     * @return The bytes for stderrLogfileMaxbytes.
     */
    com.google.protobuf.ByteString
        getStderrLogfileMaxbytesBytes();

    /**
     * <pre>
     * stderr_logfile_backups: The number of backups to keep around resulting from process stderr log file rotation. If
     * set to -1, no backups will be kept.
     * Default: 0 means 10
     * </pre>
     *
     * <code>int32 stderr_logfile_backups = 13;</code>
     * @return The stderrLogfileBackups.
     */
    int getStderrLogfileBackups();

    /**
     * <pre>
     * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
     * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
     * will not be started.
     * Default: Do not switch users
     * Note:
     *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
     *     variables like USER or HOME.
     *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
     * </pre>
     *
     * <code>string user = 14;</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
     * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
     * will not be started.
     * Default: Do not switch users
     * Note:
     *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
     *     variables like USER or HOME.
     *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
     * </pre>
     *
     * <code>string user = 14;</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
     * environment. The environment string may contain Python string expressions that will be evaluated against a
     * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
     * supervisord config file). Values containing non-alphanumeric characters should be quoted
     * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
     * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
     * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
     * Default: No extra environment
     * </pre>
     *
     * <code>string environment = 15;</code>
     * @return The environment.
     */
    java.lang.String getEnvironment();
    /**
     * <pre>
     * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
     * environment. The environment string may contain Python string expressions that will be evaluated against a
     * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
     * supervisord config file). Values containing non-alphanumeric characters should be quoted
     * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
     * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
     * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
     * Default: No extra environment
     * </pre>
     *
     * <code>string environment = 15;</code>
     * @return The bytes for environment.
     */
    com.google.protobuf.ByteString
        getEnvironmentBytes();

    /**
     * <pre>
     * umask: The umask of the supervisord process.
     * Default: 022
     * </pre>
     *
     * <code>string umask = 16;</code>
     * @return The umask.
     */
    java.lang.String getUmask();
    /**
     * <pre>
     * umask: The umask of the supervisord process.
     * Default: 022
     * </pre>
     *
     * <code>string umask = 16;</code>
     * @return The bytes for umask.
     */
    com.google.protobuf.ByteString
        getUmaskBytes();

    /**
     * <pre>
     * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v1 = 17;</code>
     * @return The cgroupV1.
     */
    java.lang.String getCgroupV1();
    /**
     * <pre>
     * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v1 = 17;</code>
     * @return The bytes for cgroupV1.
     */
    com.google.protobuf.ByteString
        getCgroupV1Bytes();

    /**
     * <pre>
     * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v2 = 18;</code>
     * @return The cgroupV2.
     */
    java.lang.String getCgroupV2();
    /**
     * <pre>
     * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v2 = 18;</code>
     * @return The bytes for cgroupV2.
     */
    com.google.protobuf.ByteString
        getCgroupV2Bytes();
  }
  /**
   * Protobuf type {@code api.supervisor.ProgramConfig}
   */
  public static final class ProgramConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:api.supervisor.ProgramConfig)
      ProgramConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProgramConfig.newBuilder() to construct.
    private ProgramConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProgramConfig() {
      command_ = "";
      directory_ = "";
      stopSignal_ = 0;
      stdoutLogfile_ = "";
      stdoutLogfileMaxbytes_ = "";
      stderrLogfile_ = "";
      stderrLogfileMaxbytes_ = "";
      user_ = "";
      environment_ = "";
      umask_ = "";
      cgroupV1_ = "";
      cgroupV2_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProgramConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProgramConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              command_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              directory_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              stopSignal_ = rawValue;
              break;
            }
            case 32: {

              stopWaitSec_ = input.readInt32();
              break;
            }
            case 40: {

              stopAsGroup_ = input.readBool();
              break;
            }
            case 48: {

              killAsGroup_ = input.readBool();
              break;
            }
            case 56: {

              redirectStderr_ = input.readBool();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              stdoutLogfile_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              stdoutLogfileMaxbytes_ = s;
              break;
            }
            case 80: {

              stdoutLogfileBackups_ = input.readInt32();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              stderrLogfile_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              stderrLogfileMaxbytes_ = s;
              break;
            }
            case 104: {

              stderrLogfileBackups_ = input.readInt32();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              environment_ = s;
              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();

              umask_ = s;
              break;
            }
            case 138: {
              java.lang.String s = input.readStringRequireUtf8();

              cgroupV1_ = s;
              break;
            }
            case 146: {
              java.lang.String s = input.readStringRequireUtf8();

              cgroupV2_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_ProgramConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_ProgramConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              api.matrix.supervisor.Program.ProgramConfig.class, api.matrix.supervisor.Program.ProgramConfig.Builder.class);
    }

    public static final int COMMAND_FIELD_NUMBER = 1;
    private volatile java.lang.Object command_;
    /**
     * <pre>
     * command: The command that will be run when this program is started. The command can be either absolute
     * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
     * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
     * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
     * "foo bar". Note that the value of command may include Python string expressions,
     * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
     * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
     * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
     * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
     * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
     * Required: Yes
     * Note:
     *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
     *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
     *     does not parse the command like a shell would.
     * </pre>
     *
     * <code>string command = 1 [(.validate.rules) = { ... }</code>
     * @return The command.
     */
    @java.lang.Override
    public java.lang.String getCommand() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        command_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * command: The command that will be run when this program is started. The command can be either absolute
     * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
     * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
     * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
     * "foo bar". Note that the value of command may include Python string expressions,
     * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
     * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
     * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
     * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
     * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
     * Required: Yes
     * Note:
     *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
     *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
     *     does not parse the command like a shell would.
     * </pre>
     *
     * <code>string command = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for command.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommandBytes() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        command_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIRECTORY_FIELD_NUMBER = 2;
    private volatile java.lang.Object directory_;
    /**
     * <pre>
     * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
     * child.
     * Default: No chdir (inherit supervisor’s)
     * </pre>
     *
     * <code>string directory = 2;</code>
     * @return The directory.
     */
    @java.lang.Override
    public java.lang.String getDirectory() {
      java.lang.Object ref = directory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        directory_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
     * child.
     * Default: No chdir (inherit supervisor’s)
     * </pre>
     *
     * <code>string directory = 2;</code>
     * @return The bytes for directory.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryBytes() {
      java.lang.Object ref = directory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        directory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STOP_SIGNAL_FIELD_NUMBER = 3;
    private int stopSignal_;
    /**
     * <pre>
     * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
     * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
     * Default: TERM
     * </pre>
     *
     * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
     * @return The enum numeric value on the wire for stopSignal.
     */
    @java.lang.Override public int getStopSignalValue() {
      return stopSignal_;
    }
    /**
     * <pre>
     * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
     * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
     * Default: TERM
     * </pre>
     *
     * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
     * @return The stopSignal.
     */
    @java.lang.Override public api.matrix.supervisor.Program.StopSignal getStopSignal() {
      @SuppressWarnings("deprecation")
      api.matrix.supervisor.Program.StopSignal result = api.matrix.supervisor.Program.StopSignal.valueOf(stopSignal_);
      return result == null ? api.matrix.supervisor.Program.StopSignal.UNRECOGNIZED : result;
    }

    public static final int STOP_WAIT_SEC_FIELD_NUMBER = 4;
    private int stopWaitSec_;
    /**
     * <pre>
     * stopwaitsecs: The number of seconds to wait for the OS to return a SIGCHLD to supervisord after the program has
     * been sent a stopsignal. If this number of seconds elapses before supervisord receives a SIGCHLD from the process,
     * supervisord will attempt to kill it with a final SIGKILL.
     * Default: 10
     * </pre>
     *
     * <code>int32 stop_wait_sec = 4;</code>
     * @return The stopWaitSec.
     */
    @java.lang.Override
    public int getStopWaitSec() {
      return stopWaitSec_;
    }

    public static final int STOP_AS_GROUP_FIELD_NUMBER = 5;
    private boolean stopAsGroup_;
    /**
     * <pre>
     * stopasgroup: If true, the flag causes supervisor to send the stop signal to the whole process group and implies
     * killasgroup is true. This is useful for programs, such as Flask in debug mode, that do not propagate stop signals
     * to their children, leaving them orphaned.
     * Default: false
     * </pre>
     *
     * <code>bool stop_as_group = 5;</code>
     * @return The stopAsGroup.
     */
    @java.lang.Override
    public boolean getStopAsGroup() {
      return stopAsGroup_;
    }

    public static final int KILL_AS_GROUP_FIELD_NUMBER = 6;
    private boolean killAsGroup_;
    /**
     * <pre>
     * killasgroup: If true, when resorting to send SIGKILL to the program to terminate it send it to its whole process
     * group instead, taking care of its children as well, useful e.g with Python programs using multiprocessing.
     * Default: false
     * </pre>
     *
     * <code>bool kill_as_group = 6;</code>
     * @return The killAsGroup.
     */
    @java.lang.Override
    public boolean getKillAsGroup() {
      return killAsGroup_;
    }

    public static final int REDIRECT_STDERR_FIELD_NUMBER = 7;
    private boolean redirectStderr_;
    /**
     * <pre>
     * redirect_stderr: If true, cause the process’ stderr output to be sent back to supervisord on its stdout file
     * descriptor (in UNIX shell terms, this is the equivalent of executing /the/program 2&gt;&amp;1).
     * Default: false
     * </pre>
     *
     * <code>bool redirect_stderr = 7;</code>
     * @return The redirectStderr.
     */
    @java.lang.Override
    public boolean getRedirectStderr() {
      return redirectStderr_;
    }

    public static final int STDOUT_LOGFILE_FIELD_NUMBER = 8;
    private volatile java.lang.Object stdoutLogfile_;
    /**
     * <pre>
     * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
     * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
     * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
     * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
     * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
     * here (the directory of the supervisord config file).
     * Note:
     *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
     *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
     *     by setting stdout_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stdout_logfile = 8;</code>
     * @return The stdoutLogfile.
     */
    @java.lang.Override
    public java.lang.String getStdoutLogfile() {
      java.lang.Object ref = stdoutLogfile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stdoutLogfile_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
     * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
     * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
     * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
     * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
     * here (the directory of the supervisord config file).
     * Note:
     *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
     *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
     *     by setting stdout_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stdout_logfile = 8;</code>
     * @return The bytes for stdoutLogfile.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStdoutLogfileBytes() {
      java.lang.Object ref = stdoutLogfile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stdoutLogfile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STDOUT_LOGFILE_MAXBYTES_FIELD_NUMBER = 9;
    private volatile java.lang.Object stdoutLogfileMaxbytes_;
    /**
     * <pre>
     * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
     * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
     * unlimited log size.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stdout_logfile_maxbytes = 9;</code>
     * @return The stdoutLogfileMaxbytes.
     */
    @java.lang.Override
    public java.lang.String getStdoutLogfileMaxbytes() {
      java.lang.Object ref = stdoutLogfileMaxbytes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stdoutLogfileMaxbytes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
     * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
     * unlimited log size.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stdout_logfile_maxbytes = 9;</code>
     * @return The bytes for stdoutLogfileMaxbytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStdoutLogfileMaxbytesBytes() {
      java.lang.Object ref = stdoutLogfileMaxbytes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stdoutLogfileMaxbytes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STDOUT_LOGFILE_BACKUPS_FIELD_NUMBER = 10;
    private int stdoutLogfileBackups_;
    /**
     * <pre>
     * stdout_logfile_backups: The number of stdout_logfile backups to keep around resulting from process stdout log file
     * rotation. If set to -1, no backups will be kept.
     * Default: 0 means 10
     * </pre>
     *
     * <code>int32 stdout_logfile_backups = 10;</code>
     * @return The stdoutLogfileBackups.
     */
    @java.lang.Override
    public int getStdoutLogfileBackups() {
      return stdoutLogfileBackups_;
    }

    public static final int STDERR_LOGFILE_FIELD_NUMBER = 11;
    private volatile java.lang.Object stderrLogfile_;
    /**
     * <pre>
     * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
     * as stdout_logfile and may contain the same Python string expressions.
     * Note:
     *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
     *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
     *     by setting stderr_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stderr_logfile = 11;</code>
     * @return The stderrLogfile.
     */
    @java.lang.Override
    public java.lang.String getStderrLogfile() {
      java.lang.Object ref = stderrLogfile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stderrLogfile_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
     * as stdout_logfile and may contain the same Python string expressions.
     * Note:
     *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
     *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
     *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
     *     by setting stderr_logfile_maxbytes = 0.
     * </pre>
     *
     * <code>string stderr_logfile = 11;</code>
     * @return The bytes for stderrLogfile.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStderrLogfileBytes() {
      java.lang.Object ref = stderrLogfile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stderrLogfile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STDERR_LOGFILE_MAXBYTES_FIELD_NUMBER = 12;
    private volatile java.lang.Object stderrLogfileMaxbytes_;
    /**
     * <pre>
     * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
     * value types as stdout_logfile_maxbytes.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stderr_logfile_maxbytes = 12;</code>
     * @return The stderrLogfileMaxbytes.
     */
    @java.lang.Override
    public java.lang.String getStderrLogfileMaxbytes() {
      java.lang.Object ref = stderrLogfileMaxbytes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stderrLogfileMaxbytes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
     * value types as stdout_logfile_maxbytes.
     * Default: 0 means 50MB
     * </pre>
     *
     * <code>string stderr_logfile_maxbytes = 12;</code>
     * @return The bytes for stderrLogfileMaxbytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStderrLogfileMaxbytesBytes() {
      java.lang.Object ref = stderrLogfileMaxbytes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stderrLogfileMaxbytes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STDERR_LOGFILE_BACKUPS_FIELD_NUMBER = 13;
    private int stderrLogfileBackups_;
    /**
     * <pre>
     * stderr_logfile_backups: The number of backups to keep around resulting from process stderr log file rotation. If
     * set to -1, no backups will be kept.
     * Default: 0 means 10
     * </pre>
     *
     * <code>int32 stderr_logfile_backups = 13;</code>
     * @return The stderrLogfileBackups.
     */
    @java.lang.Override
    public int getStderrLogfileBackups() {
      return stderrLogfileBackups_;
    }

    public static final int USER_FIELD_NUMBER = 14;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
     * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
     * will not be started.
     * Default: Do not switch users
     * Note:
     *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
     *     variables like USER or HOME.
     *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
     * </pre>
     *
     * <code>string user = 14;</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
     * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
     * will not be started.
     * Default: Do not switch users
     * Note:
     *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
     *     variables like USER or HOME.
     *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
     * </pre>
     *
     * <code>string user = 14;</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENVIRONMENT_FIELD_NUMBER = 15;
    private volatile java.lang.Object environment_;
    /**
     * <pre>
     * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
     * environment. The environment string may contain Python string expressions that will be evaluated against a
     * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
     * supervisord config file). Values containing non-alphanumeric characters should be quoted
     * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
     * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
     * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
     * Default: No extra environment
     * </pre>
     *
     * <code>string environment = 15;</code>
     * @return The environment.
     */
    @java.lang.Override
    public java.lang.String getEnvironment() {
      java.lang.Object ref = environment_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        environment_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
     * environment. The environment string may contain Python string expressions that will be evaluated against a
     * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
     * supervisord config file). Values containing non-alphanumeric characters should be quoted
     * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
     * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
     * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
     * Default: No extra environment
     * </pre>
     *
     * <code>string environment = 15;</code>
     * @return The bytes for environment.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEnvironmentBytes() {
      java.lang.Object ref = environment_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        environment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UMASK_FIELD_NUMBER = 16;
    private volatile java.lang.Object umask_;
    /**
     * <pre>
     * umask: The umask of the supervisord process.
     * Default: 022
     * </pre>
     *
     * <code>string umask = 16;</code>
     * @return The umask.
     */
    @java.lang.Override
    public java.lang.String getUmask() {
      java.lang.Object ref = umask_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        umask_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * umask: The umask of the supervisord process.
     * Default: 022
     * </pre>
     *
     * <code>string umask = 16;</code>
     * @return The bytes for umask.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUmaskBytes() {
      java.lang.Object ref = umask_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        umask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CGROUP_V1_FIELD_NUMBER = 17;
    private volatile java.lang.Object cgroupV1_;
    /**
     * <pre>
     * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v1 = 17;</code>
     * @return The cgroupV1.
     */
    @java.lang.Override
    public java.lang.String getCgroupV1() {
      java.lang.Object ref = cgroupV1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cgroupV1_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v1 = 17;</code>
     * @return The bytes for cgroupV1.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCgroupV1Bytes() {
      java.lang.Object ref = cgroupV1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cgroupV1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CGROUP_V2_FIELD_NUMBER = 18;
    private volatile java.lang.Object cgroupV2_;
    /**
     * <pre>
     * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v2 = 18;</code>
     * @return The cgroupV2.
     */
    @java.lang.Override
    public java.lang.String getCgroupV2() {
      java.lang.Object ref = cgroupV2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cgroupV2_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
     * Default: ""
     * </pre>
     *
     * <code>string cgroup_v2 = 18;</code>
     * @return The bytes for cgroupV2.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCgroupV2Bytes() {
      java.lang.Object ref = cgroupV2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cgroupV2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(command_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, command_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(directory_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, directory_);
      }
      if (stopSignal_ != api.matrix.supervisor.Program.StopSignal.STOP_SIGNAL_TERM.getNumber()) {
        output.writeEnum(3, stopSignal_);
      }
      if (stopWaitSec_ != 0) {
        output.writeInt32(4, stopWaitSec_);
      }
      if (stopAsGroup_ != false) {
        output.writeBool(5, stopAsGroup_);
      }
      if (killAsGroup_ != false) {
        output.writeBool(6, killAsGroup_);
      }
      if (redirectStderr_ != false) {
        output.writeBool(7, redirectStderr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdoutLogfile_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, stdoutLogfile_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdoutLogfileMaxbytes_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, stdoutLogfileMaxbytes_);
      }
      if (stdoutLogfileBackups_ != 0) {
        output.writeInt32(10, stdoutLogfileBackups_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stderrLogfile_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, stderrLogfile_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stderrLogfileMaxbytes_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, stderrLogfileMaxbytes_);
      }
      if (stderrLogfileBackups_ != 0) {
        output.writeInt32(13, stderrLogfileBackups_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, user_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environment_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, environment_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(umask_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, umask_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cgroupV1_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, cgroupV1_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cgroupV2_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, cgroupV2_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(command_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, command_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(directory_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, directory_);
      }
      if (stopSignal_ != api.matrix.supervisor.Program.StopSignal.STOP_SIGNAL_TERM.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, stopSignal_);
      }
      if (stopWaitSec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, stopWaitSec_);
      }
      if (stopAsGroup_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, stopAsGroup_);
      }
      if (killAsGroup_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, killAsGroup_);
      }
      if (redirectStderr_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, redirectStderr_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdoutLogfile_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, stdoutLogfile_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdoutLogfileMaxbytes_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, stdoutLogfileMaxbytes_);
      }
      if (stdoutLogfileBackups_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, stdoutLogfileBackups_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stderrLogfile_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, stderrLogfile_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stderrLogfileMaxbytes_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, stderrLogfileMaxbytes_);
      }
      if (stderrLogfileBackups_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, stderrLogfileBackups_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, user_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environment_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, environment_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(umask_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, umask_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cgroupV1_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, cgroupV1_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cgroupV2_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, cgroupV2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof api.matrix.supervisor.Program.ProgramConfig)) {
        return super.equals(obj);
      }
      api.matrix.supervisor.Program.ProgramConfig other = (api.matrix.supervisor.Program.ProgramConfig) obj;

      if (!getCommand()
          .equals(other.getCommand())) return false;
      if (!getDirectory()
          .equals(other.getDirectory())) return false;
      if (stopSignal_ != other.stopSignal_) return false;
      if (getStopWaitSec()
          != other.getStopWaitSec()) return false;
      if (getStopAsGroup()
          != other.getStopAsGroup()) return false;
      if (getKillAsGroup()
          != other.getKillAsGroup()) return false;
      if (getRedirectStderr()
          != other.getRedirectStderr()) return false;
      if (!getStdoutLogfile()
          .equals(other.getStdoutLogfile())) return false;
      if (!getStdoutLogfileMaxbytes()
          .equals(other.getStdoutLogfileMaxbytes())) return false;
      if (getStdoutLogfileBackups()
          != other.getStdoutLogfileBackups()) return false;
      if (!getStderrLogfile()
          .equals(other.getStderrLogfile())) return false;
      if (!getStderrLogfileMaxbytes()
          .equals(other.getStderrLogfileMaxbytes())) return false;
      if (getStderrLogfileBackups()
          != other.getStderrLogfileBackups()) return false;
      if (!getUser()
          .equals(other.getUser())) return false;
      if (!getEnvironment()
          .equals(other.getEnvironment())) return false;
      if (!getUmask()
          .equals(other.getUmask())) return false;
      if (!getCgroupV1()
          .equals(other.getCgroupV1())) return false;
      if (!getCgroupV2()
          .equals(other.getCgroupV2())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getCommand().hashCode();
      hash = (37 * hash) + DIRECTORY_FIELD_NUMBER;
      hash = (53 * hash) + getDirectory().hashCode();
      hash = (37 * hash) + STOP_SIGNAL_FIELD_NUMBER;
      hash = (53 * hash) + stopSignal_;
      hash = (37 * hash) + STOP_WAIT_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getStopWaitSec();
      hash = (37 * hash) + STOP_AS_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getStopAsGroup());
      hash = (37 * hash) + KILL_AS_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getKillAsGroup());
      hash = (37 * hash) + REDIRECT_STDERR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRedirectStderr());
      hash = (37 * hash) + STDOUT_LOGFILE_FIELD_NUMBER;
      hash = (53 * hash) + getStdoutLogfile().hashCode();
      hash = (37 * hash) + STDOUT_LOGFILE_MAXBYTES_FIELD_NUMBER;
      hash = (53 * hash) + getStdoutLogfileMaxbytes().hashCode();
      hash = (37 * hash) + STDOUT_LOGFILE_BACKUPS_FIELD_NUMBER;
      hash = (53 * hash) + getStdoutLogfileBackups();
      hash = (37 * hash) + STDERR_LOGFILE_FIELD_NUMBER;
      hash = (53 * hash) + getStderrLogfile().hashCode();
      hash = (37 * hash) + STDERR_LOGFILE_MAXBYTES_FIELD_NUMBER;
      hash = (53 * hash) + getStderrLogfileMaxbytes().hashCode();
      hash = (37 * hash) + STDERR_LOGFILE_BACKUPS_FIELD_NUMBER;
      hash = (53 * hash) + getStderrLogfileBackups();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      hash = (37 * hash) + ENVIRONMENT_FIELD_NUMBER;
      hash = (53 * hash) + getEnvironment().hashCode();
      hash = (37 * hash) + UMASK_FIELD_NUMBER;
      hash = (53 * hash) + getUmask().hashCode();
      hash = (37 * hash) + CGROUP_V1_FIELD_NUMBER;
      hash = (53 * hash) + getCgroupV1().hashCode();
      hash = (37 * hash) + CGROUP_V2_FIELD_NUMBER;
      hash = (53 * hash) + getCgroupV2().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.ProgramConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(api.matrix.supervisor.Program.ProgramConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code api.supervisor.ProgramConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:api.supervisor.ProgramConfig)
        api.matrix.supervisor.Program.ProgramConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_ProgramConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_ProgramConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.ProgramConfig.class, api.matrix.supervisor.Program.ProgramConfig.Builder.class);
      }

      // Construct using api.matrix.supervisor.Program.ProgramConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        command_ = "";

        directory_ = "";

        stopSignal_ = 0;

        stopWaitSec_ = 0;

        stopAsGroup_ = false;

        killAsGroup_ = false;

        redirectStderr_ = false;

        stdoutLogfile_ = "";

        stdoutLogfileMaxbytes_ = "";

        stdoutLogfileBackups_ = 0;

        stderrLogfile_ = "";

        stderrLogfileMaxbytes_ = "";

        stderrLogfileBackups_ = 0;

        user_ = "";

        environment_ = "";

        umask_ = "";

        cgroupV1_ = "";

        cgroupV2_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_ProgramConfig_descriptor;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.ProgramConfig getDefaultInstanceForType() {
        return api.matrix.supervisor.Program.ProgramConfig.getDefaultInstance();
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.ProgramConfig build() {
        api.matrix.supervisor.Program.ProgramConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.ProgramConfig buildPartial() {
        api.matrix.supervisor.Program.ProgramConfig result = new api.matrix.supervisor.Program.ProgramConfig(this);
        result.command_ = command_;
        result.directory_ = directory_;
        result.stopSignal_ = stopSignal_;
        result.stopWaitSec_ = stopWaitSec_;
        result.stopAsGroup_ = stopAsGroup_;
        result.killAsGroup_ = killAsGroup_;
        result.redirectStderr_ = redirectStderr_;
        result.stdoutLogfile_ = stdoutLogfile_;
        result.stdoutLogfileMaxbytes_ = stdoutLogfileMaxbytes_;
        result.stdoutLogfileBackups_ = stdoutLogfileBackups_;
        result.stderrLogfile_ = stderrLogfile_;
        result.stderrLogfileMaxbytes_ = stderrLogfileMaxbytes_;
        result.stderrLogfileBackups_ = stderrLogfileBackups_;
        result.user_ = user_;
        result.environment_ = environment_;
        result.umask_ = umask_;
        result.cgroupV1_ = cgroupV1_;
        result.cgroupV2_ = cgroupV2_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof api.matrix.supervisor.Program.ProgramConfig) {
          return mergeFrom((api.matrix.supervisor.Program.ProgramConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(api.matrix.supervisor.Program.ProgramConfig other) {
        if (other == api.matrix.supervisor.Program.ProgramConfig.getDefaultInstance()) return this;
        if (!other.getCommand().isEmpty()) {
          command_ = other.command_;
          onChanged();
        }
        if (!other.getDirectory().isEmpty()) {
          directory_ = other.directory_;
          onChanged();
        }
        if (other.stopSignal_ != 0) {
          setStopSignalValue(other.getStopSignalValue());
        }
        if (other.getStopWaitSec() != 0) {
          setStopWaitSec(other.getStopWaitSec());
        }
        if (other.getStopAsGroup() != false) {
          setStopAsGroup(other.getStopAsGroup());
        }
        if (other.getKillAsGroup() != false) {
          setKillAsGroup(other.getKillAsGroup());
        }
        if (other.getRedirectStderr() != false) {
          setRedirectStderr(other.getRedirectStderr());
        }
        if (!other.getStdoutLogfile().isEmpty()) {
          stdoutLogfile_ = other.stdoutLogfile_;
          onChanged();
        }
        if (!other.getStdoutLogfileMaxbytes().isEmpty()) {
          stdoutLogfileMaxbytes_ = other.stdoutLogfileMaxbytes_;
          onChanged();
        }
        if (other.getStdoutLogfileBackups() != 0) {
          setStdoutLogfileBackups(other.getStdoutLogfileBackups());
        }
        if (!other.getStderrLogfile().isEmpty()) {
          stderrLogfile_ = other.stderrLogfile_;
          onChanged();
        }
        if (!other.getStderrLogfileMaxbytes().isEmpty()) {
          stderrLogfileMaxbytes_ = other.stderrLogfileMaxbytes_;
          onChanged();
        }
        if (other.getStderrLogfileBackups() != 0) {
          setStderrLogfileBackups(other.getStderrLogfileBackups());
        }
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.getEnvironment().isEmpty()) {
          environment_ = other.environment_;
          onChanged();
        }
        if (!other.getUmask().isEmpty()) {
          umask_ = other.umask_;
          onChanged();
        }
        if (!other.getCgroupV1().isEmpty()) {
          cgroupV1_ = other.cgroupV1_;
          onChanged();
        }
        if (!other.getCgroupV2().isEmpty()) {
          cgroupV2_ = other.cgroupV2_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        api.matrix.supervisor.Program.ProgramConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (api.matrix.supervisor.Program.ProgramConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object command_ = "";
      /**
       * <pre>
       * command: The command that will be run when this program is started. The command can be either absolute
       * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
       * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
       * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
       * "foo bar". Note that the value of command may include Python string expressions,
       * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
       * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
       * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
       * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
       * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
       * Required: Yes
       * Note:
       *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
       *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
       *     does not parse the command like a shell would.
       * </pre>
       *
       * <code>string command = 1 [(.validate.rules) = { ... }</code>
       * @return The command.
       */
      public java.lang.String getCommand() {
        java.lang.Object ref = command_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          command_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * command: The command that will be run when this program is started. The command can be either absolute
       * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
       * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
       * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
       * "foo bar". Note that the value of command may include Python string expressions,
       * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
       * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
       * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
       * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
       * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
       * Required: Yes
       * Note:
       *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
       *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
       *     does not parse the command like a shell would.
       * </pre>
       *
       * <code>string command = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for command.
       */
      public com.google.protobuf.ByteString
          getCommandBytes() {
        java.lang.Object ref = command_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          command_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * command: The command that will be run when this program is started. The command can be either absolute
       * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
       * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
       * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
       * "foo bar". Note that the value of command may include Python string expressions,
       * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
       * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
       * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
       * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
       * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
       * Required: Yes
       * Note:
       *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
       *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
       *     does not parse the command like a shell would.
       * </pre>
       *
       * <code>string command = 1 [(.validate.rules) = { ... }</code>
       * @param value The command to set.
       * @return This builder for chaining.
       */
      public Builder setCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * command: The command that will be run when this program is started. The command can be either absolute
       * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
       * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
       * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
       * "foo bar". Note that the value of command may include Python string expressions,
       * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
       * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
       * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
       * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
       * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
       * Required: Yes
       * Note:
       *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
       *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
       *     does not parse the command like a shell would.
       * </pre>
       *
       * <code>string command = 1 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCommand() {
        
        command_ = getDefaultInstance().getCommand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * command: The command that will be run when this program is started. The command can be either absolute
       * (e.g. /path/to/programname) or relative (e.g. programname). If it is relative, the supervisord’s environment $PATH
       * will be searched for the executable. Programs can accept arguments, e.g. /path/to/program foo bar. The command line
       * can use double quotes to group arguments with spaces in them to pass to the program, e.g. /path/to/program/name -p
       * "foo bar". Note that the value of command may include Python string expressions,
       * e.g. /path/to/programname --port=80%(process_num)02d might expand to /path/to/programname --port=8000 at runtime.
       * String expressions are evaluated against a dictionary containing the keys group_name, host_node_name, program_name,
       * process_num, numprocs, here (the directory of the supervisord config file), and all supervisord’s environment
       * variables prefixed with ENV_. Controlled programs should themselves not be daemons, as supervisord assumes it is
       * responsible for daemonizing its subprocesses (see Nondaemonizing of Subprocesses).
       * Required: Yes
       * Note:
       *   - The command will be truncated if it looks like a config file comment, e.g. command=bash -c 'foo ; bar' will be
       *     truncated to command=bash -c 'foo. Quoting will not prevent this behavior, since the configuration file reader
       *     does not parse the command like a shell would.
       * </pre>
       *
       * <code>string command = 1 [(.validate.rules) = { ... }</code>
       * @param value The bytes for command to set.
       * @return This builder for chaining.
       */
      public Builder setCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        command_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object directory_ = "";
      /**
       * <pre>
       * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
       * child.
       * Default: No chdir (inherit supervisor’s)
       * </pre>
       *
       * <code>string directory = 2;</code>
       * @return The directory.
       */
      public java.lang.String getDirectory() {
        java.lang.Object ref = directory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          directory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
       * child.
       * Default: No chdir (inherit supervisor’s)
       * </pre>
       *
       * <code>string directory = 2;</code>
       * @return The bytes for directory.
       */
      public com.google.protobuf.ByteString
          getDirectoryBytes() {
        java.lang.Object ref = directory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          directory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
       * child.
       * Default: No chdir (inherit supervisor’s)
       * </pre>
       *
       * <code>string directory = 2;</code>
       * @param value The directory to set.
       * @return This builder for chaining.
       */
      public Builder setDirectory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        directory_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
       * child.
       * Default: No chdir (inherit supervisor’s)
       * </pre>
       *
       * <code>string directory = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectory() {
        
        directory_ = getDefaultInstance().getDirectory();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * directory: A file path representing a directory to which supervisord should temporarily chdir before exec’ing the
       * child.
       * Default: No chdir (inherit supervisor’s)
       * </pre>
       *
       * <code>string directory = 2;</code>
       * @param value The bytes for directory to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        directory_ = value;
        onChanged();
        return this;
      }

      private int stopSignal_ = 0;
      /**
       * <pre>
       * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
       * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
       * Default: TERM
       * </pre>
       *
       * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
       * @return The enum numeric value on the wire for stopSignal.
       */
      @java.lang.Override public int getStopSignalValue() {
        return stopSignal_;
      }
      /**
       * <pre>
       * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
       * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
       * Default: TERM
       * </pre>
       *
       * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
       * @param value The enum numeric value on the wire for stopSignal to set.
       * @return This builder for chaining.
       */
      public Builder setStopSignalValue(int value) {
        
        stopSignal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
       * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
       * Default: TERM
       * </pre>
       *
       * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
       * @return The stopSignal.
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.StopSignal getStopSignal() {
        @SuppressWarnings("deprecation")
        api.matrix.supervisor.Program.StopSignal result = api.matrix.supervisor.Program.StopSignal.valueOf(stopSignal_);
        return result == null ? api.matrix.supervisor.Program.StopSignal.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
       * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
       * Default: TERM
       * </pre>
       *
       * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
       * @param value The stopSignal to set.
       * @return This builder for chaining.
       */
      public Builder setStopSignal(api.matrix.supervisor.Program.StopSignal value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        stopSignal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stopsignal: The signal used to kill the program when a stop is requested. This can be specified using the signal’s
       * name or its number. It is normally one of: TERM, HUP, INT, QUIT, KILL, USR1, or USR2.
       * Default: TERM
       * </pre>
       *
       * <code>.api.supervisor.StopSignal stop_signal = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStopSignal() {
        
        stopSignal_ = 0;
        onChanged();
        return this;
      }

      private int stopWaitSec_ ;
      /**
       * <pre>
       * stopwaitsecs: The number of seconds to wait for the OS to return a SIGCHLD to supervisord after the program has
       * been sent a stopsignal. If this number of seconds elapses before supervisord receives a SIGCHLD from the process,
       * supervisord will attempt to kill it with a final SIGKILL.
       * Default: 10
       * </pre>
       *
       * <code>int32 stop_wait_sec = 4;</code>
       * @return The stopWaitSec.
       */
      @java.lang.Override
      public int getStopWaitSec() {
        return stopWaitSec_;
      }
      /**
       * <pre>
       * stopwaitsecs: The number of seconds to wait for the OS to return a SIGCHLD to supervisord after the program has
       * been sent a stopsignal. If this number of seconds elapses before supervisord receives a SIGCHLD from the process,
       * supervisord will attempt to kill it with a final SIGKILL.
       * Default: 10
       * </pre>
       *
       * <code>int32 stop_wait_sec = 4;</code>
       * @param value The stopWaitSec to set.
       * @return This builder for chaining.
       */
      public Builder setStopWaitSec(int value) {
        
        stopWaitSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stopwaitsecs: The number of seconds to wait for the OS to return a SIGCHLD to supervisord after the program has
       * been sent a stopsignal. If this number of seconds elapses before supervisord receives a SIGCHLD from the process,
       * supervisord will attempt to kill it with a final SIGKILL.
       * Default: 10
       * </pre>
       *
       * <code>int32 stop_wait_sec = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStopWaitSec() {
        
        stopWaitSec_ = 0;
        onChanged();
        return this;
      }

      private boolean stopAsGroup_ ;
      /**
       * <pre>
       * stopasgroup: If true, the flag causes supervisor to send the stop signal to the whole process group and implies
       * killasgroup is true. This is useful for programs, such as Flask in debug mode, that do not propagate stop signals
       * to their children, leaving them orphaned.
       * Default: false
       * </pre>
       *
       * <code>bool stop_as_group = 5;</code>
       * @return The stopAsGroup.
       */
      @java.lang.Override
      public boolean getStopAsGroup() {
        return stopAsGroup_;
      }
      /**
       * <pre>
       * stopasgroup: If true, the flag causes supervisor to send the stop signal to the whole process group and implies
       * killasgroup is true. This is useful for programs, such as Flask in debug mode, that do not propagate stop signals
       * to their children, leaving them orphaned.
       * Default: false
       * </pre>
       *
       * <code>bool stop_as_group = 5;</code>
       * @param value The stopAsGroup to set.
       * @return This builder for chaining.
       */
      public Builder setStopAsGroup(boolean value) {
        
        stopAsGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stopasgroup: If true, the flag causes supervisor to send the stop signal to the whole process group and implies
       * killasgroup is true. This is useful for programs, such as Flask in debug mode, that do not propagate stop signals
       * to their children, leaving them orphaned.
       * Default: false
       * </pre>
       *
       * <code>bool stop_as_group = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStopAsGroup() {
        
        stopAsGroup_ = false;
        onChanged();
        return this;
      }

      private boolean killAsGroup_ ;
      /**
       * <pre>
       * killasgroup: If true, when resorting to send SIGKILL to the program to terminate it send it to its whole process
       * group instead, taking care of its children as well, useful e.g with Python programs using multiprocessing.
       * Default: false
       * </pre>
       *
       * <code>bool kill_as_group = 6;</code>
       * @return The killAsGroup.
       */
      @java.lang.Override
      public boolean getKillAsGroup() {
        return killAsGroup_;
      }
      /**
       * <pre>
       * killasgroup: If true, when resorting to send SIGKILL to the program to terminate it send it to its whole process
       * group instead, taking care of its children as well, useful e.g with Python programs using multiprocessing.
       * Default: false
       * </pre>
       *
       * <code>bool kill_as_group = 6;</code>
       * @param value The killAsGroup to set.
       * @return This builder for chaining.
       */
      public Builder setKillAsGroup(boolean value) {
        
        killAsGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * killasgroup: If true, when resorting to send SIGKILL to the program to terminate it send it to its whole process
       * group instead, taking care of its children as well, useful e.g with Python programs using multiprocessing.
       * Default: false
       * </pre>
       *
       * <code>bool kill_as_group = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKillAsGroup() {
        
        killAsGroup_ = false;
        onChanged();
        return this;
      }

      private boolean redirectStderr_ ;
      /**
       * <pre>
       * redirect_stderr: If true, cause the process’ stderr output to be sent back to supervisord on its stdout file
       * descriptor (in UNIX shell terms, this is the equivalent of executing /the/program 2&gt;&amp;1).
       * Default: false
       * </pre>
       *
       * <code>bool redirect_stderr = 7;</code>
       * @return The redirectStderr.
       */
      @java.lang.Override
      public boolean getRedirectStderr() {
        return redirectStderr_;
      }
      /**
       * <pre>
       * redirect_stderr: If true, cause the process’ stderr output to be sent back to supervisord on its stdout file
       * descriptor (in UNIX shell terms, this is the equivalent of executing /the/program 2&gt;&amp;1).
       * Default: false
       * </pre>
       *
       * <code>bool redirect_stderr = 7;</code>
       * @param value The redirectStderr to set.
       * @return This builder for chaining.
       */
      public Builder setRedirectStderr(boolean value) {
        
        redirectStderr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * redirect_stderr: If true, cause the process’ stderr output to be sent back to supervisord on its stdout file
       * descriptor (in UNIX shell terms, this is the equivalent of executing /the/program 2&gt;&amp;1).
       * Default: false
       * </pre>
       *
       * <code>bool redirect_stderr = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRedirectStderr() {
        
        redirectStderr_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object stdoutLogfile_ = "";
      /**
       * <pre>
       * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
       * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
       * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
       * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
       * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
       * here (the directory of the supervisord config file).
       * Note:
       *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
       *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
       *     by setting stdout_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stdout_logfile = 8;</code>
       * @return The stdoutLogfile.
       */
      public java.lang.String getStdoutLogfile() {
        java.lang.Object ref = stdoutLogfile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stdoutLogfile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
       * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
       * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
       * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
       * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
       * here (the directory of the supervisord config file).
       * Note:
       *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
       *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
       *     by setting stdout_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stdout_logfile = 8;</code>
       * @return The bytes for stdoutLogfile.
       */
      public com.google.protobuf.ByteString
          getStdoutLogfileBytes() {
        java.lang.Object ref = stdoutLogfile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stdoutLogfile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
       * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
       * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
       * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
       * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
       * here (the directory of the supervisord config file).
       * Note:
       *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
       *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
       *     by setting stdout_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stdout_logfile = 8;</code>
       * @param value The stdoutLogfile to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutLogfile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stdoutLogfile_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
       * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
       * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
       * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
       * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
       * here (the directory of the supervisord config file).
       * Note:
       *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
       *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
       *     by setting stdout_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stdout_logfile = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearStdoutLogfile() {
        
        stdoutLogfile_ = getDefaultInstance().getStdoutLogfile();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stdout_logfile: Put process stdout output in this file (and if redirect_stderr is true, also place stderr output in
       * this file). If stdout_logfile is unset or set to AUTO, supervisor will automatically choose a file location. If
       * this is set to empty (default), supervisord will create no log file. AUTO log files and their backups will be
       * deleted when supervisord restarts. The stdout_logfile value can contain Python string expressions that will
       * evaluated against a dictionary that contains the keys group_name, host_node_name, process_num, program_name, and
       * here (the directory of the supervisord config file).
       * Note:
       *   - It is not possible for two processes to share a single log file (stdout_logfile) when rotation
       *     (stdout_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stdout_logfile is set to a special file like /dev/stdout that is not seekable, log rotation must be disabled
       *     by setting stdout_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stdout_logfile = 8;</code>
       * @param value The bytes for stdoutLogfile to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutLogfileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stdoutLogfile_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object stdoutLogfileMaxbytes_ = "";
      /**
       * <pre>
       * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
       * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
       * unlimited log size.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stdout_logfile_maxbytes = 9;</code>
       * @return The stdoutLogfileMaxbytes.
       */
      public java.lang.String getStdoutLogfileMaxbytes() {
        java.lang.Object ref = stdoutLogfileMaxbytes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stdoutLogfileMaxbytes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
       * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
       * unlimited log size.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stdout_logfile_maxbytes = 9;</code>
       * @return The bytes for stdoutLogfileMaxbytes.
       */
      public com.google.protobuf.ByteString
          getStdoutLogfileMaxbytesBytes() {
        java.lang.Object ref = stdoutLogfileMaxbytes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stdoutLogfileMaxbytes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
       * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
       * unlimited log size.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stdout_logfile_maxbytes = 9;</code>
       * @param value The stdoutLogfileMaxbytes to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutLogfileMaxbytes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stdoutLogfileMaxbytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
       * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
       * unlimited log size.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stdout_logfile_maxbytes = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearStdoutLogfileMaxbytes() {
        
        stdoutLogfileMaxbytes_ = getDefaultInstance().getStdoutLogfileMaxbytes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stdout_logfile_maxbytes: The maximum number of bytes that may be consumed by stdout_logfile before it is rotated
       * (suffix multipliers like “KB”, “MB”, and “GB” can be used in the value). Set this value to -1 to indicate an
       * unlimited log size.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stdout_logfile_maxbytes = 9;</code>
       * @param value The bytes for stdoutLogfileMaxbytes to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutLogfileMaxbytesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stdoutLogfileMaxbytes_ = value;
        onChanged();
        return this;
      }

      private int stdoutLogfileBackups_ ;
      /**
       * <pre>
       * stdout_logfile_backups: The number of stdout_logfile backups to keep around resulting from process stdout log file
       * rotation. If set to -1, no backups will be kept.
       * Default: 0 means 10
       * </pre>
       *
       * <code>int32 stdout_logfile_backups = 10;</code>
       * @return The stdoutLogfileBackups.
       */
      @java.lang.Override
      public int getStdoutLogfileBackups() {
        return stdoutLogfileBackups_;
      }
      /**
       * <pre>
       * stdout_logfile_backups: The number of stdout_logfile backups to keep around resulting from process stdout log file
       * rotation. If set to -1, no backups will be kept.
       * Default: 0 means 10
       * </pre>
       *
       * <code>int32 stdout_logfile_backups = 10;</code>
       * @param value The stdoutLogfileBackups to set.
       * @return This builder for chaining.
       */
      public Builder setStdoutLogfileBackups(int value) {
        
        stdoutLogfileBackups_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stdout_logfile_backups: The number of stdout_logfile backups to keep around resulting from process stdout log file
       * rotation. If set to -1, no backups will be kept.
       * Default: 0 means 10
       * </pre>
       *
       * <code>int32 stdout_logfile_backups = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearStdoutLogfileBackups() {
        
        stdoutLogfileBackups_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object stderrLogfile_ = "";
      /**
       * <pre>
       * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
       * as stdout_logfile and may contain the same Python string expressions.
       * Note:
       *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
       *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
       *     by setting stderr_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stderr_logfile = 11;</code>
       * @return The stderrLogfile.
       */
      public java.lang.String getStderrLogfile() {
        java.lang.Object ref = stderrLogfile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stderrLogfile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
       * as stdout_logfile and may contain the same Python string expressions.
       * Note:
       *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
       *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
       *     by setting stderr_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stderr_logfile = 11;</code>
       * @return The bytes for stderrLogfile.
       */
      public com.google.protobuf.ByteString
          getStderrLogfileBytes() {
        java.lang.Object ref = stderrLogfile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stderrLogfile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
       * as stdout_logfile and may contain the same Python string expressions.
       * Note:
       *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
       *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
       *     by setting stderr_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stderr_logfile = 11;</code>
       * @param value The stderrLogfile to set.
       * @return This builder for chaining.
       */
      public Builder setStderrLogfile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stderrLogfile_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
       * as stdout_logfile and may contain the same Python string expressions.
       * Note:
       *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
       *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
       *     by setting stderr_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stderr_logfile = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearStderrLogfile() {
        
        stderrLogfile_ = getDefaultInstance().getStderrLogfile();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stderr_logfile: Put process stderr output in this file unless redirect_stderr is true. Accepts the same value types
       * as stdout_logfile and may contain the same Python string expressions.
       * Note:
       *   - It is not possible for two processes to share a single log file (stderr_logfile) when rotation
       *     (stderr_logfile_maxbytes) is enabled. This will result in the file being corrupted.
       *   - If stderr_logfile is set to a special file like /dev/stderr that is not seekable, log rotation must be disabled
       *     by setting stderr_logfile_maxbytes = 0.
       * </pre>
       *
       * <code>string stderr_logfile = 11;</code>
       * @param value The bytes for stderrLogfile to set.
       * @return This builder for chaining.
       */
      public Builder setStderrLogfileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stderrLogfile_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object stderrLogfileMaxbytes_ = "";
      /**
       * <pre>
       * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
       * value types as stdout_logfile_maxbytes.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stderr_logfile_maxbytes = 12;</code>
       * @return The stderrLogfileMaxbytes.
       */
      public java.lang.String getStderrLogfileMaxbytes() {
        java.lang.Object ref = stderrLogfileMaxbytes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stderrLogfileMaxbytes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
       * value types as stdout_logfile_maxbytes.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stderr_logfile_maxbytes = 12;</code>
       * @return The bytes for stderrLogfileMaxbytes.
       */
      public com.google.protobuf.ByteString
          getStderrLogfileMaxbytesBytes() {
        java.lang.Object ref = stderrLogfileMaxbytes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stderrLogfileMaxbytes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
       * value types as stdout_logfile_maxbytes.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stderr_logfile_maxbytes = 12;</code>
       * @param value The stderrLogfileMaxbytes to set.
       * @return This builder for chaining.
       */
      public Builder setStderrLogfileMaxbytes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stderrLogfileMaxbytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
       * value types as stdout_logfile_maxbytes.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stderr_logfile_maxbytes = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearStderrLogfileMaxbytes() {
        
        stderrLogfileMaxbytes_ = getDefaultInstance().getStderrLogfileMaxbytes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stderr_logfile_maxbytes: The maximum number of bytes before logfile rotation for stderr_logfile. Accepts the same
       * value types as stdout_logfile_maxbytes.
       * Default: 0 means 50MB
       * </pre>
       *
       * <code>string stderr_logfile_maxbytes = 12;</code>
       * @param value The bytes for stderrLogfileMaxbytes to set.
       * @return This builder for chaining.
       */
      public Builder setStderrLogfileMaxbytesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stderrLogfileMaxbytes_ = value;
        onChanged();
        return this;
      }

      private int stderrLogfileBackups_ ;
      /**
       * <pre>
       * stderr_logfile_backups: The number of backups to keep around resulting from process stderr log file rotation. If
       * set to -1, no backups will be kept.
       * Default: 0 means 10
       * </pre>
       *
       * <code>int32 stderr_logfile_backups = 13;</code>
       * @return The stderrLogfileBackups.
       */
      @java.lang.Override
      public int getStderrLogfileBackups() {
        return stderrLogfileBackups_;
      }
      /**
       * <pre>
       * stderr_logfile_backups: The number of backups to keep around resulting from process stderr log file rotation. If
       * set to -1, no backups will be kept.
       * Default: 0 means 10
       * </pre>
       *
       * <code>int32 stderr_logfile_backups = 13;</code>
       * @param value The stderrLogfileBackups to set.
       * @return This builder for chaining.
       */
      public Builder setStderrLogfileBackups(int value) {
        
        stderrLogfileBackups_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * stderr_logfile_backups: The number of backups to keep around resulting from process stderr log file rotation. If
       * set to -1, no backups will be kept.
       * Default: 0 means 10
       * </pre>
       *
       * <code>int32 stderr_logfile_backups = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearStderrLogfileBackups() {
        
        stderrLogfileBackups_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
       * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
       * will not be started.
       * Default: Do not switch users
       * Note:
       *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
       *     variables like USER or HOME.
       *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
       * </pre>
       *
       * <code>string user = 14;</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
       * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
       * will not be started.
       * Default: Do not switch users
       * Note:
       *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
       *     variables like USER or HOME.
       *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
       * </pre>
       *
       * <code>string user = 14;</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
       * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
       * will not be started.
       * Default: Do not switch users
       * Note:
       *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
       *     variables like USER or HOME.
       *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
       * </pre>
       *
       * <code>string user = 14;</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
       * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
       * will not be started.
       * Default: Do not switch users
       * Note:
       *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
       *     variables like USER or HOME.
       *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
       * </pre>
       *
       * <code>string user = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user: Instruct supervisord to use this UNIX user account as the account which runs the program. The user can only
       * be switched if supervisord is run as the root user. If supervisord can’t switch to the specified user, the program
       * will not be started.
       * Default: Do not switch users
       * Note:
       *   - The user will be changed using setuid only. This does not start a login shell and does not change environment
       *     variables like USER or HOME.
       *     See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment) for details.
       * </pre>
       *
       * <code>string user = 14;</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object environment_ = "";
      /**
       * <pre>
       * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
       * environment. The environment string may contain Python string expressions that will be evaluated against a
       * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
       * supervisord config file). Values containing non-alphanumeric characters should be quoted
       * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
       * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
       * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
       * Default: No extra environment
       * </pre>
       *
       * <code>string environment = 15;</code>
       * @return The environment.
       */
      public java.lang.String getEnvironment() {
        java.lang.Object ref = environment_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          environment_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
       * environment. The environment string may contain Python string expressions that will be evaluated against a
       * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
       * supervisord config file). Values containing non-alphanumeric characters should be quoted
       * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
       * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
       * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
       * Default: No extra environment
       * </pre>
       *
       * <code>string environment = 15;</code>
       * @return The bytes for environment.
       */
      public com.google.protobuf.ByteString
          getEnvironmentBytes() {
        java.lang.Object ref = environment_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          environment_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
       * environment. The environment string may contain Python string expressions that will be evaluated against a
       * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
       * supervisord config file). Values containing non-alphanumeric characters should be quoted
       * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
       * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
       * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
       * Default: No extra environment
       * </pre>
       *
       * <code>string environment = 15;</code>
       * @param value The environment to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironment(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        environment_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
       * environment. The environment string may contain Python string expressions that will be evaluated against a
       * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
       * supervisord config file). Values containing non-alphanumeric characters should be quoted
       * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
       * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
       * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
       * Default: No extra environment
       * </pre>
       *
       * <code>string environment = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnvironment() {
        
        environment_ = getDefaultInstance().getEnvironment();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * environment: A list of key/value pairs in the form KEY="val",KEY2="val2" that will be placed in the child process’
       * environment. The environment string may contain Python string expressions that will be evaluated against a
       * dictionary containing group_name, host_node_name, process_num, program_name, and here (the directory of the
       * supervisord config file). Values containing non-alphanumeric characters should be quoted
       * (e.g. KEY="val:123",KEY2="val,456"). Otherwise, quoting the values is optional but recommended.Note that the
       * subprocess will inherit the environment variables of the shell used to start “supervisord” except for the ones
       * overridden here. See Subprocess Environment (http://supervisord.org/subprocess.html#subprocess-environment).
       * Default: No extra environment
       * </pre>
       *
       * <code>string environment = 15;</code>
       * @param value The bytes for environment to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        environment_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object umask_ = "";
      /**
       * <pre>
       * umask: The umask of the supervisord process.
       * Default: 022
       * </pre>
       *
       * <code>string umask = 16;</code>
       * @return The umask.
       */
      public java.lang.String getUmask() {
        java.lang.Object ref = umask_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          umask_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * umask: The umask of the supervisord process.
       * Default: 022
       * </pre>
       *
       * <code>string umask = 16;</code>
       * @return The bytes for umask.
       */
      public com.google.protobuf.ByteString
          getUmaskBytes() {
        java.lang.Object ref = umask_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          umask_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * umask: The umask of the supervisord process.
       * Default: 022
       * </pre>
       *
       * <code>string umask = 16;</code>
       * @param value The umask to set.
       * @return This builder for chaining.
       */
      public Builder setUmask(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        umask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * umask: The umask of the supervisord process.
       * Default: 022
       * </pre>
       *
       * <code>string umask = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearUmask() {
        
        umask_ = getDefaultInstance().getUmask();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * umask: The umask of the supervisord process.
       * Default: 022
       * </pre>
       *
       * <code>string umask = 16;</code>
       * @param value The bytes for umask to set.
       * @return This builder for chaining.
       */
      public Builder setUmaskBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        umask_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cgroupV1_ = "";
      /**
       * <pre>
       * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v1 = 17;</code>
       * @return The cgroupV1.
       */
      public java.lang.String getCgroupV1() {
        java.lang.Object ref = cgroupV1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cgroupV1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v1 = 17;</code>
       * @return The bytes for cgroupV1.
       */
      public com.google.protobuf.ByteString
          getCgroupV1Bytes() {
        java.lang.Object ref = cgroupV1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cgroupV1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v1 = 17;</code>
       * @param value The cgroupV1 to set.
       * @return This builder for chaining.
       */
      public Builder setCgroupV1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cgroupV1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v1 = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearCgroupV1() {
        
        cgroupV1_ = getDefaultInstance().getCgroupV1();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cgroup_v1: The path of cgroup v1 group to put into. (without /sys/fs/cgroup prefix)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v1 = 17;</code>
       * @param value The bytes for cgroupV1 to set.
       * @return This builder for chaining.
       */
      public Builder setCgroupV1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cgroupV1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cgroupV2_ = "";
      /**
       * <pre>
       * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v2 = 18;</code>
       * @return The cgroupV2.
       */
      public java.lang.String getCgroupV2() {
        java.lang.Object ref = cgroupV2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cgroupV2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v2 = 18;</code>
       * @return The bytes for cgroupV2.
       */
      public com.google.protobuf.ByteString
          getCgroupV2Bytes() {
        java.lang.Object ref = cgroupV2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cgroupV2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v2 = 18;</code>
       * @param value The cgroupV2 to set.
       * @return This builder for chaining.
       */
      public Builder setCgroupV2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cgroupV2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v2 = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearCgroupV2() {
        
        cgroupV2_ = getDefaultInstance().getCgroupV2();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cgroup_v2: The systemd v2 cgroup slice name to into. (avoid using '-' in the value)
       * Default: ""
       * </pre>
       *
       * <code>string cgroup_v2 = 18;</code>
       * @param value The bytes for cgroupV2 to set.
       * @return This builder for chaining.
       */
      public Builder setCgroupV2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cgroupV2_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:api.supervisor.ProgramConfig)
    }

    // @@protoc_insertion_point(class_scope:api.supervisor.ProgramConfig)
    private static final api.matrix.supervisor.Program.ProgramConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new api.matrix.supervisor.Program.ProgramConfig();
    }

    public static api.matrix.supervisor.Program.ProgramConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProgramConfig>
        PARSER = new com.google.protobuf.AbstractParser<ProgramConfig>() {
      @java.lang.Override
      public ProgramConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProgramConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProgramConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProgramConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public api.matrix.supervisor.Program.ProgramConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DaemonConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:api.supervisor.DaemonConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * autostart: If yes, this program will start automatically when supervisord is started.
     * Default: yes
     * </pre>
     *
     * <code>.api.supervisor.AutoStart auto_start = 1;</code>
     * @return The enum numeric value on the wire for autoStart.
     */
    int getAutoStartValue();
    /**
     * <pre>
     * autostart: If yes, this program will start automatically when supervisord is started.
     * Default: yes
     * </pre>
     *
     * <code>.api.supervisor.AutoStart auto_start = 1;</code>
     * @return The autoStart.
     */
    api.matrix.supervisor.Program.AutoStart getAutoStart();

    /**
     * <pre>
     * startretries: The number of serial failure attempts that supervisord will allow when attempting to start the
     * program before giving up and putting the process into an FATAL state.
     * Default: 3
     * Note:
     *   - After each failed restart, process will be put in BACKOFF state and each retry attempt will take increasingly
     *     more time.
     *   - See Process States (http://supervisord.org/subprocess.html#process-states) for explanation of the FATAL and
     *     BACKOFF states.
     * </pre>
     *
     * <code>int32 start_retries = 2;</code>
     * @return The startRetries.
     */
    int getStartRetries();

    /**
     * <pre>
     * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
     * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
     * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
     * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
     * exits, without regard to its exit code.
     * Default: unexpected
     * Note:
     *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
     *    started up (the process is in the RUNNING state).
     *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
     *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
     * </pre>
     *
     * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
     * @return The enum numeric value on the wire for autoRestart.
     */
    int getAutoRestartValue();
    /**
     * <pre>
     * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
     * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
     * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
     * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
     * exits, without regard to its exit code.
     * Default: unexpected
     * Note:
     *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
     *    started up (the process is in the RUNNING state).
     *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
     *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
     * </pre>
     *
     * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
     * @return The autoRestart.
     */
    api.matrix.supervisor.Program.AutoRestart getAutoRestart();

    /**
     * <pre>
     * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
     * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
     * supervisord will restart the process if it exits with an exit code that is not defined in this list.
     * (e.g. 0,2,127)
     * Default: 0
     * </pre>
     *
     * <code>string exit_codes = 4;</code>
     * @return The exitCodes.
     */
    java.lang.String getExitCodes();
    /**
     * <pre>
     * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
     * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
     * supervisord will restart the process if it exits with an exit code that is not defined in this list.
     * (e.g. 0,2,127)
     * Default: 0
     * </pre>
     *
     * <code>string exit_codes = 4;</code>
     * @return The bytes for exitCodes.
     */
    com.google.protobuf.ByteString
        getExitCodesBytes();
  }
  /**
   * Protobuf type {@code api.supervisor.DaemonConfig}
   */
  public static final class DaemonConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:api.supervisor.DaemonConfig)
      DaemonConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DaemonConfig.newBuilder() to construct.
    private DaemonConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DaemonConfig() {
      autoStart_ = 0;
      autoRestart_ = 0;
      exitCodes_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DaemonConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DaemonConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              autoStart_ = rawValue;
              break;
            }
            case 16: {

              startRetries_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              autoRestart_ = rawValue;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              exitCodes_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_DaemonConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_DaemonConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              api.matrix.supervisor.Program.DaemonConfig.class, api.matrix.supervisor.Program.DaemonConfig.Builder.class);
    }

    public static final int AUTO_START_FIELD_NUMBER = 1;
    private int autoStart_;
    /**
     * <pre>
     * autostart: If yes, this program will start automatically when supervisord is started.
     * Default: yes
     * </pre>
     *
     * <code>.api.supervisor.AutoStart auto_start = 1;</code>
     * @return The enum numeric value on the wire for autoStart.
     */
    @java.lang.Override public int getAutoStartValue() {
      return autoStart_;
    }
    /**
     * <pre>
     * autostart: If yes, this program will start automatically when supervisord is started.
     * Default: yes
     * </pre>
     *
     * <code>.api.supervisor.AutoStart auto_start = 1;</code>
     * @return The autoStart.
     */
    @java.lang.Override public api.matrix.supervisor.Program.AutoStart getAutoStart() {
      @SuppressWarnings("deprecation")
      api.matrix.supervisor.Program.AutoStart result = api.matrix.supervisor.Program.AutoStart.valueOf(autoStart_);
      return result == null ? api.matrix.supervisor.Program.AutoStart.UNRECOGNIZED : result;
    }

    public static final int START_RETRIES_FIELD_NUMBER = 2;
    private int startRetries_;
    /**
     * <pre>
     * startretries: The number of serial failure attempts that supervisord will allow when attempting to start the
     * program before giving up and putting the process into an FATAL state.
     * Default: 3
     * Note:
     *   - After each failed restart, process will be put in BACKOFF state and each retry attempt will take increasingly
     *     more time.
     *   - See Process States (http://supervisord.org/subprocess.html#process-states) for explanation of the FATAL and
     *     BACKOFF states.
     * </pre>
     *
     * <code>int32 start_retries = 2;</code>
     * @return The startRetries.
     */
    @java.lang.Override
    public int getStartRetries() {
      return startRetries_;
    }

    public static final int AUTO_RESTART_FIELD_NUMBER = 3;
    private int autoRestart_;
    /**
     * <pre>
     * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
     * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
     * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
     * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
     * exits, without regard to its exit code.
     * Default: unexpected
     * Note:
     *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
     *    started up (the process is in the RUNNING state).
     *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
     *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
     * </pre>
     *
     * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
     * @return The enum numeric value on the wire for autoRestart.
     */
    @java.lang.Override public int getAutoRestartValue() {
      return autoRestart_;
    }
    /**
     * <pre>
     * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
     * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
     * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
     * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
     * exits, without regard to its exit code.
     * Default: unexpected
     * Note:
     *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
     *    started up (the process is in the RUNNING state).
     *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
     *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
     * </pre>
     *
     * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
     * @return The autoRestart.
     */
    @java.lang.Override public api.matrix.supervisor.Program.AutoRestart getAutoRestart() {
      @SuppressWarnings("deprecation")
      api.matrix.supervisor.Program.AutoRestart result = api.matrix.supervisor.Program.AutoRestart.valueOf(autoRestart_);
      return result == null ? api.matrix.supervisor.Program.AutoRestart.UNRECOGNIZED : result;
    }

    public static final int EXIT_CODES_FIELD_NUMBER = 4;
    private volatile java.lang.Object exitCodes_;
    /**
     * <pre>
     * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
     * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
     * supervisord will restart the process if it exits with an exit code that is not defined in this list.
     * (e.g. 0,2,127)
     * Default: 0
     * </pre>
     *
     * <code>string exit_codes = 4;</code>
     * @return The exitCodes.
     */
    @java.lang.Override
    public java.lang.String getExitCodes() {
      java.lang.Object ref = exitCodes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exitCodes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
     * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
     * supervisord will restart the process if it exits with an exit code that is not defined in this list.
     * (e.g. 0,2,127)
     * Default: 0
     * </pre>
     *
     * <code>string exit_codes = 4;</code>
     * @return The bytes for exitCodes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExitCodesBytes() {
      java.lang.Object ref = exitCodes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exitCodes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (autoStart_ != api.matrix.supervisor.Program.AutoStart.AUTO_START_YES.getNumber()) {
        output.writeEnum(1, autoStart_);
      }
      if (startRetries_ != 0) {
        output.writeInt32(2, startRetries_);
      }
      if (autoRestart_ != api.matrix.supervisor.Program.AutoRestart.AUTO_RESTART_UNEXPECTED.getNumber()) {
        output.writeEnum(3, autoRestart_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exitCodes_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, exitCodes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (autoStart_ != api.matrix.supervisor.Program.AutoStart.AUTO_START_YES.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, autoStart_);
      }
      if (startRetries_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startRetries_);
      }
      if (autoRestart_ != api.matrix.supervisor.Program.AutoRestart.AUTO_RESTART_UNEXPECTED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, autoRestart_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exitCodes_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, exitCodes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof api.matrix.supervisor.Program.DaemonConfig)) {
        return super.equals(obj);
      }
      api.matrix.supervisor.Program.DaemonConfig other = (api.matrix.supervisor.Program.DaemonConfig) obj;

      if (autoStart_ != other.autoStart_) return false;
      if (getStartRetries()
          != other.getStartRetries()) return false;
      if (autoRestart_ != other.autoRestart_) return false;
      if (!getExitCodes()
          .equals(other.getExitCodes())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTO_START_FIELD_NUMBER;
      hash = (53 * hash) + autoStart_;
      hash = (37 * hash) + START_RETRIES_FIELD_NUMBER;
      hash = (53 * hash) + getStartRetries();
      hash = (37 * hash) + AUTO_RESTART_FIELD_NUMBER;
      hash = (53 * hash) + autoRestart_;
      hash = (37 * hash) + EXIT_CODES_FIELD_NUMBER;
      hash = (53 * hash) + getExitCodes().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.DaemonConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(api.matrix.supervisor.Program.DaemonConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code api.supervisor.DaemonConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:api.supervisor.DaemonConfig)
        api.matrix.supervisor.Program.DaemonConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_DaemonConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_DaemonConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.DaemonConfig.class, api.matrix.supervisor.Program.DaemonConfig.Builder.class);
      }

      // Construct using api.matrix.supervisor.Program.DaemonConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        autoStart_ = 0;

        startRetries_ = 0;

        autoRestart_ = 0;

        exitCodes_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_DaemonConfig_descriptor;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.DaemonConfig getDefaultInstanceForType() {
        return api.matrix.supervisor.Program.DaemonConfig.getDefaultInstance();
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.DaemonConfig build() {
        api.matrix.supervisor.Program.DaemonConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.DaemonConfig buildPartial() {
        api.matrix.supervisor.Program.DaemonConfig result = new api.matrix.supervisor.Program.DaemonConfig(this);
        result.autoStart_ = autoStart_;
        result.startRetries_ = startRetries_;
        result.autoRestart_ = autoRestart_;
        result.exitCodes_ = exitCodes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof api.matrix.supervisor.Program.DaemonConfig) {
          return mergeFrom((api.matrix.supervisor.Program.DaemonConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(api.matrix.supervisor.Program.DaemonConfig other) {
        if (other == api.matrix.supervisor.Program.DaemonConfig.getDefaultInstance()) return this;
        if (other.autoStart_ != 0) {
          setAutoStartValue(other.getAutoStartValue());
        }
        if (other.getStartRetries() != 0) {
          setStartRetries(other.getStartRetries());
        }
        if (other.autoRestart_ != 0) {
          setAutoRestartValue(other.getAutoRestartValue());
        }
        if (!other.getExitCodes().isEmpty()) {
          exitCodes_ = other.exitCodes_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        api.matrix.supervisor.Program.DaemonConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (api.matrix.supervisor.Program.DaemonConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int autoStart_ = 0;
      /**
       * <pre>
       * autostart: If yes, this program will start automatically when supervisord is started.
       * Default: yes
       * </pre>
       *
       * <code>.api.supervisor.AutoStart auto_start = 1;</code>
       * @return The enum numeric value on the wire for autoStart.
       */
      @java.lang.Override public int getAutoStartValue() {
        return autoStart_;
      }
      /**
       * <pre>
       * autostart: If yes, this program will start automatically when supervisord is started.
       * Default: yes
       * </pre>
       *
       * <code>.api.supervisor.AutoStart auto_start = 1;</code>
       * @param value The enum numeric value on the wire for autoStart to set.
       * @return This builder for chaining.
       */
      public Builder setAutoStartValue(int value) {
        
        autoStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * autostart: If yes, this program will start automatically when supervisord is started.
       * Default: yes
       * </pre>
       *
       * <code>.api.supervisor.AutoStart auto_start = 1;</code>
       * @return The autoStart.
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.AutoStart getAutoStart() {
        @SuppressWarnings("deprecation")
        api.matrix.supervisor.Program.AutoStart result = api.matrix.supervisor.Program.AutoStart.valueOf(autoStart_);
        return result == null ? api.matrix.supervisor.Program.AutoStart.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * autostart: If yes, this program will start automatically when supervisord is started.
       * Default: yes
       * </pre>
       *
       * <code>.api.supervisor.AutoStart auto_start = 1;</code>
       * @param value The autoStart to set.
       * @return This builder for chaining.
       */
      public Builder setAutoStart(api.matrix.supervisor.Program.AutoStart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        autoStart_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * autostart: If yes, this program will start automatically when supervisord is started.
       * Default: yes
       * </pre>
       *
       * <code>.api.supervisor.AutoStart auto_start = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoStart() {
        
        autoStart_ = 0;
        onChanged();
        return this;
      }

      private int startRetries_ ;
      /**
       * <pre>
       * startretries: The number of serial failure attempts that supervisord will allow when attempting to start the
       * program before giving up and putting the process into an FATAL state.
       * Default: 3
       * Note:
       *   - After each failed restart, process will be put in BACKOFF state and each retry attempt will take increasingly
       *     more time.
       *   - See Process States (http://supervisord.org/subprocess.html#process-states) for explanation of the FATAL and
       *     BACKOFF states.
       * </pre>
       *
       * <code>int32 start_retries = 2;</code>
       * @return The startRetries.
       */
      @java.lang.Override
      public int getStartRetries() {
        return startRetries_;
      }
      /**
       * <pre>
       * startretries: The number of serial failure attempts that supervisord will allow when attempting to start the
       * program before giving up and putting the process into an FATAL state.
       * Default: 3
       * Note:
       *   - After each failed restart, process will be put in BACKOFF state and each retry attempt will take increasingly
       *     more time.
       *   - See Process States (http://supervisord.org/subprocess.html#process-states) for explanation of the FATAL and
       *     BACKOFF states.
       * </pre>
       *
       * <code>int32 start_retries = 2;</code>
       * @param value The startRetries to set.
       * @return This builder for chaining.
       */
      public Builder setStartRetries(int value) {
        
        startRetries_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * startretries: The number of serial failure attempts that supervisord will allow when attempting to start the
       * program before giving up and putting the process into an FATAL state.
       * Default: 3
       * Note:
       *   - After each failed restart, process will be put in BACKOFF state and each retry attempt will take increasingly
       *     more time.
       *   - See Process States (http://supervisord.org/subprocess.html#process-states) for explanation of the FATAL and
       *     BACKOFF states.
       * </pre>
       *
       * <code>int32 start_retries = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartRetries() {
        
        startRetries_ = 0;
        onChanged();
        return this;
      }

      private int autoRestart_ = 0;
      /**
       * <pre>
       * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
       * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
       * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
       * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
       * exits, without regard to its exit code.
       * Default: unexpected
       * Note:
       *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
       *    started up (the process is in the RUNNING state).
       *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
       *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
       * </pre>
       *
       * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
       * @return The enum numeric value on the wire for autoRestart.
       */
      @java.lang.Override public int getAutoRestartValue() {
        return autoRestart_;
      }
      /**
       * <pre>
       * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
       * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
       * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
       * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
       * exits, without regard to its exit code.
       * Default: unexpected
       * Note:
       *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
       *    started up (the process is in the RUNNING state).
       *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
       *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
       * </pre>
       *
       * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
       * @param value The enum numeric value on the wire for autoRestart to set.
       * @return This builder for chaining.
       */
      public Builder setAutoRestartValue(int value) {
        
        autoRestart_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
       * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
       * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
       * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
       * exits, without regard to its exit code.
       * Default: unexpected
       * Note:
       *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
       *    started up (the process is in the RUNNING state).
       *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
       *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
       * </pre>
       *
       * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
       * @return The autoRestart.
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.AutoRestart getAutoRestart() {
        @SuppressWarnings("deprecation")
        api.matrix.supervisor.Program.AutoRestart result = api.matrix.supervisor.Program.AutoRestart.valueOf(autoRestart_);
        return result == null ? api.matrix.supervisor.Program.AutoRestart.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
       * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
       * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
       * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
       * exits, without regard to its exit code.
       * Default: unexpected
       * Note:
       *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
       *    started up (the process is in the RUNNING state).
       *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
       *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
       * </pre>
       *
       * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
       * @param value The autoRestart to set.
       * @return This builder for chaining.
       */
      public Builder setAutoRestart(api.matrix.supervisor.Program.AutoRestart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        autoRestart_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * autorestart: Specifies if supervisord should automatically restart a process if it exits when it is in the RUNNING
       * state. May be one of false, unexpected, or true. If false, the process will not be autorestarted. If unexpected,
       * the process will be restarted when the program exits with an exit code that is not one of the exit codes associated
       * with this process’ configuration (see exitcodes). If true, the process will be unconditionally restarted when it
       * exits, without regard to its exit code.
       * Default: unexpected
       * Note:
       *  - autorestart controls whether supervisord will autorestart a program if it exits after it has successfully
       *    started up (the process is in the RUNNING state).
       *  - supervisord has a different restart mechanism for when the process is starting up (the process is in the
       *    STARTING state). Retries during process startup are controlled by startsecs and startretries.
       * </pre>
       *
       * <code>.api.supervisor.AutoRestart auto_restart = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoRestart() {
        
        autoRestart_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object exitCodes_ = "";
      /**
       * <pre>
       * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
       * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
       * supervisord will restart the process if it exits with an exit code that is not defined in this list.
       * (e.g. 0,2,127)
       * Default: 0
       * </pre>
       *
       * <code>string exit_codes = 4;</code>
       * @return The exitCodes.
       */
      public java.lang.String getExitCodes() {
        java.lang.Object ref = exitCodes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          exitCodes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
       * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
       * supervisord will restart the process if it exits with an exit code that is not defined in this list.
       * (e.g. 0,2,127)
       * Default: 0
       * </pre>
       *
       * <code>string exit_codes = 4;</code>
       * @return The bytes for exitCodes.
       */
      public com.google.protobuf.ByteString
          getExitCodesBytes() {
        java.lang.Object ref = exitCodes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exitCodes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
       * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
       * supervisord will restart the process if it exits with an exit code that is not defined in this list.
       * (e.g. 0,2,127)
       * Default: 0
       * </pre>
       *
       * <code>string exit_codes = 4;</code>
       * @param value The exitCodes to set.
       * @return This builder for chaining.
       */
      public Builder setExitCodes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        exitCodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
       * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
       * supervisord will restart the process if it exits with an exit code that is not defined in this list.
       * (e.g. 0,2,127)
       * Default: 0
       * </pre>
       *
       * <code>string exit_codes = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearExitCodes() {
        
        exitCodes_ = getDefaultInstance().getExitCodes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * exitcodes: The list of “expected” exit codes for this program used with autorestart. If the autorestart parameter
       * is set to unexpected, and the process exits in any other way than as a result of a supervisor stop request,
       * supervisord will restart the process if it exits with an exit code that is not defined in this list.
       * (e.g. 0,2,127)
       * Default: 0
       * </pre>
       *
       * <code>string exit_codes = 4;</code>
       * @param value The bytes for exitCodes to set.
       * @return This builder for chaining.
       */
      public Builder setExitCodesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        exitCodes_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:api.supervisor.DaemonConfig)
    }

    // @@protoc_insertion_point(class_scope:api.supervisor.DaemonConfig)
    private static final api.matrix.supervisor.Program.DaemonConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new api.matrix.supervisor.Program.DaemonConfig();
    }

    public static api.matrix.supervisor.Program.DaemonConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DaemonConfig>
        PARSER = new com.google.protobuf.AbstractParser<DaemonConfig>() {
      @java.lang.Override
      public DaemonConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DaemonConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DaemonConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DaemonConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public api.matrix.supervisor.Program.DaemonConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterProgramOrBuilder extends
      // @@protoc_insertion_point(interface_extends:api.supervisor.RegisterProgram)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code api.supervisor.RegisterProgram}
   */
  public static final class RegisterProgram extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:api.supervisor.RegisterProgram)
      RegisterProgramOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegisterProgram.newBuilder() to construct.
    private RegisterProgram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterProgram() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RegisterProgram();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterProgram(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              api.matrix.supervisor.Program.RegisterProgram.class, api.matrix.supervisor.Program.RegisterProgram.Builder.class);
    }

    public interface RequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:api.supervisor.RegisterProgram.Request)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>.api.supervisor.ProgramConfig config = 2;</code>
       * @return Whether the config field is set.
       */
      boolean hasConfig();
      /**
       * <code>.api.supervisor.ProgramConfig config = 2;</code>
       * @return The config.
       */
      api.matrix.supervisor.Program.ProgramConfig getConfig();
      /**
       * <code>.api.supervisor.ProgramConfig config = 2;</code>
       */
      api.matrix.supervisor.Program.ProgramConfigOrBuilder getConfigOrBuilder();

      /**
       * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
       * @return Whether the daemon field is set.
       */
      boolean hasDaemon();
      /**
       * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
       * @return The daemon.
       */
      api.matrix.supervisor.Program.DaemonConfig getDaemon();
      /**
       * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
       */
      api.matrix.supervisor.Program.DaemonConfigOrBuilder getDaemonOrBuilder();

      /**
       * <pre>
       * stdin to the program once started
       * </pre>
       *
       * <code>string stdin = 4;</code>
       * @return The stdin.
       */
      java.lang.String getStdin();
      /**
       * <pre>
       * stdin to the program once started
       * </pre>
       *
       * <code>string stdin = 4;</code>
       * @return The bytes for stdin.
       */
      com.google.protobuf.ByteString
          getStdinBytes();

      /**
       * <pre>
       * timeout seconds
       * </pre>
       *
       * <code>int32 timeout_sec = 5;</code>
       * @return The timeoutSec.
       */
      int getTimeoutSec();
    }
    /**
     * Protobuf type {@code api.supervisor.RegisterProgram.Request}
     */
    public static final class Request extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:api.supervisor.RegisterProgram.Request)
        RequestOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Request.newBuilder() to construct.
      private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Request() {
        name_ = "";
        stdin_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Request();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Request(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                api.matrix.supervisor.Program.ProgramConfig.Builder subBuilder = null;
                if (config_ != null) {
                  subBuilder = config_.toBuilder();
                }
                config_ = input.readMessage(api.matrix.supervisor.Program.ProgramConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(config_);
                  config_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                api.matrix.supervisor.Program.DaemonConfig.Builder subBuilder = null;
                if (daemon_ != null) {
                  subBuilder = daemon_.toBuilder();
                }
                daemon_ = input.readMessage(api.matrix.supervisor.Program.DaemonConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(daemon_);
                  daemon_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                stdin_ = s;
                break;
              }
              case 40: {

                timeoutSec_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.RegisterProgram.Request.class, api.matrix.supervisor.Program.RegisterProgram.Request.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CONFIG_FIELD_NUMBER = 2;
      private api.matrix.supervisor.Program.ProgramConfig config_;
      /**
       * <code>.api.supervisor.ProgramConfig config = 2;</code>
       * @return Whether the config field is set.
       */
      @java.lang.Override
      public boolean hasConfig() {
        return config_ != null;
      }
      /**
       * <code>.api.supervisor.ProgramConfig config = 2;</code>
       * @return The config.
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.ProgramConfig getConfig() {
        return config_ == null ? api.matrix.supervisor.Program.ProgramConfig.getDefaultInstance() : config_;
      }
      /**
       * <code>.api.supervisor.ProgramConfig config = 2;</code>
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.ProgramConfigOrBuilder getConfigOrBuilder() {
        return getConfig();
      }

      public static final int DAEMON_FIELD_NUMBER = 3;
      private api.matrix.supervisor.Program.DaemonConfig daemon_;
      /**
       * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
       * @return Whether the daemon field is set.
       */
      @java.lang.Override
      public boolean hasDaemon() {
        return daemon_ != null;
      }
      /**
       * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
       * @return The daemon.
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.DaemonConfig getDaemon() {
        return daemon_ == null ? api.matrix.supervisor.Program.DaemonConfig.getDefaultInstance() : daemon_;
      }
      /**
       * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
       */
      @java.lang.Override
      public api.matrix.supervisor.Program.DaemonConfigOrBuilder getDaemonOrBuilder() {
        return getDaemon();
      }

      public static final int STDIN_FIELD_NUMBER = 4;
      private volatile java.lang.Object stdin_;
      /**
       * <pre>
       * stdin to the program once started
       * </pre>
       *
       * <code>string stdin = 4;</code>
       * @return The stdin.
       */
      @java.lang.Override
      public java.lang.String getStdin() {
        java.lang.Object ref = stdin_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stdin_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * stdin to the program once started
       * </pre>
       *
       * <code>string stdin = 4;</code>
       * @return The bytes for stdin.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStdinBytes() {
        java.lang.Object ref = stdin_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stdin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TIMEOUT_SEC_FIELD_NUMBER = 5;
      private int timeoutSec_;
      /**
       * <pre>
       * timeout seconds
       * </pre>
       *
       * <code>int32 timeout_sec = 5;</code>
       * @return The timeoutSec.
       */
      @java.lang.Override
      public int getTimeoutSec() {
        return timeoutSec_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (config_ != null) {
          output.writeMessage(2, getConfig());
        }
        if (daemon_ != null) {
          output.writeMessage(3, getDaemon());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdin_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stdin_);
        }
        if (timeoutSec_ != 0) {
          output.writeInt32(5, timeoutSec_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (config_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getConfig());
        }
        if (daemon_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getDaemon());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stdin_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stdin_);
        }
        if (timeoutSec_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, timeoutSec_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof api.matrix.supervisor.Program.RegisterProgram.Request)) {
          return super.equals(obj);
        }
        api.matrix.supervisor.Program.RegisterProgram.Request other = (api.matrix.supervisor.Program.RegisterProgram.Request) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (hasConfig() != other.hasConfig()) return false;
        if (hasConfig()) {
          if (!getConfig()
              .equals(other.getConfig())) return false;
        }
        if (hasDaemon() != other.hasDaemon()) return false;
        if (hasDaemon()) {
          if (!getDaemon()
              .equals(other.getDaemon())) return false;
        }
        if (!getStdin()
            .equals(other.getStdin())) return false;
        if (getTimeoutSec()
            != other.getTimeoutSec()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (hasConfig()) {
          hash = (37 * hash) + CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getConfig().hashCode();
        }
        if (hasDaemon()) {
          hash = (37 * hash) + DAEMON_FIELD_NUMBER;
          hash = (53 * hash) + getDaemon().hashCode();
        }
        hash = (37 * hash) + STDIN_FIELD_NUMBER;
        hash = (53 * hash) + getStdin().hashCode();
        hash = (37 * hash) + TIMEOUT_SEC_FIELD_NUMBER;
        hash = (53 * hash) + getTimeoutSec();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(api.matrix.supervisor.Program.RegisterProgram.Request prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code api.supervisor.RegisterProgram.Request}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:api.supervisor.RegisterProgram.Request)
          api.matrix.supervisor.Program.RegisterProgram.RequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Request_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Request_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  api.matrix.supervisor.Program.RegisterProgram.Request.class, api.matrix.supervisor.Program.RegisterProgram.Request.Builder.class);
        }

        // Construct using api.matrix.supervisor.Program.RegisterProgram.Request.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          if (configBuilder_ == null) {
            config_ = null;
          } else {
            config_ = null;
            configBuilder_ = null;
          }
          if (daemonBuilder_ == null) {
            daemon_ = null;
          } else {
            daemon_ = null;
            daemonBuilder_ = null;
          }
          stdin_ = "";

          timeoutSec_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Request_descriptor;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.RegisterProgram.Request getDefaultInstanceForType() {
          return api.matrix.supervisor.Program.RegisterProgram.Request.getDefaultInstance();
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.RegisterProgram.Request build() {
          api.matrix.supervisor.Program.RegisterProgram.Request result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.RegisterProgram.Request buildPartial() {
          api.matrix.supervisor.Program.RegisterProgram.Request result = new api.matrix.supervisor.Program.RegisterProgram.Request(this);
          result.name_ = name_;
          if (configBuilder_ == null) {
            result.config_ = config_;
          } else {
            result.config_ = configBuilder_.build();
          }
          if (daemonBuilder_ == null) {
            result.daemon_ = daemon_;
          } else {
            result.daemon_ = daemonBuilder_.build();
          }
          result.stdin_ = stdin_;
          result.timeoutSec_ = timeoutSec_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof api.matrix.supervisor.Program.RegisterProgram.Request) {
            return mergeFrom((api.matrix.supervisor.Program.RegisterProgram.Request)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(api.matrix.supervisor.Program.RegisterProgram.Request other) {
          if (other == api.matrix.supervisor.Program.RegisterProgram.Request.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (other.hasConfig()) {
            mergeConfig(other.getConfig());
          }
          if (other.hasDaemon()) {
            mergeDaemon(other.getDaemon());
          }
          if (!other.getStdin().isEmpty()) {
            stdin_ = other.stdin_;
            onChanged();
          }
          if (other.getTimeoutSec() != 0) {
            setTimeoutSec(other.getTimeoutSec());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          api.matrix.supervisor.Program.RegisterProgram.Request parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (api.matrix.supervisor.Program.RegisterProgram.Request) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private api.matrix.supervisor.Program.ProgramConfig config_;
        private com.google.protobuf.SingleFieldBuilderV3<
            api.matrix.supervisor.Program.ProgramConfig, api.matrix.supervisor.Program.ProgramConfig.Builder, api.matrix.supervisor.Program.ProgramConfigOrBuilder> configBuilder_;
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         * @return Whether the config field is set.
         */
        public boolean hasConfig() {
          return configBuilder_ != null || config_ != null;
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         * @return The config.
         */
        public api.matrix.supervisor.Program.ProgramConfig getConfig() {
          if (configBuilder_ == null) {
            return config_ == null ? api.matrix.supervisor.Program.ProgramConfig.getDefaultInstance() : config_;
          } else {
            return configBuilder_.getMessage();
          }
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        public Builder setConfig(api.matrix.supervisor.Program.ProgramConfig value) {
          if (configBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            config_ = value;
            onChanged();
          } else {
            configBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        public Builder setConfig(
            api.matrix.supervisor.Program.ProgramConfig.Builder builderForValue) {
          if (configBuilder_ == null) {
            config_ = builderForValue.build();
            onChanged();
          } else {
            configBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        public Builder mergeConfig(api.matrix.supervisor.Program.ProgramConfig value) {
          if (configBuilder_ == null) {
            if (config_ != null) {
              config_ =
                api.matrix.supervisor.Program.ProgramConfig.newBuilder(config_).mergeFrom(value).buildPartial();
            } else {
              config_ = value;
            }
            onChanged();
          } else {
            configBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        public Builder clearConfig() {
          if (configBuilder_ == null) {
            config_ = null;
            onChanged();
          } else {
            config_ = null;
            configBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        public api.matrix.supervisor.Program.ProgramConfig.Builder getConfigBuilder() {
          
          onChanged();
          return getConfigFieldBuilder().getBuilder();
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        public api.matrix.supervisor.Program.ProgramConfigOrBuilder getConfigOrBuilder() {
          if (configBuilder_ != null) {
            return configBuilder_.getMessageOrBuilder();
          } else {
            return config_ == null ?
                api.matrix.supervisor.Program.ProgramConfig.getDefaultInstance() : config_;
          }
        }
        /**
         * <code>.api.supervisor.ProgramConfig config = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            api.matrix.supervisor.Program.ProgramConfig, api.matrix.supervisor.Program.ProgramConfig.Builder, api.matrix.supervisor.Program.ProgramConfigOrBuilder> 
            getConfigFieldBuilder() {
          if (configBuilder_ == null) {
            configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                api.matrix.supervisor.Program.ProgramConfig, api.matrix.supervisor.Program.ProgramConfig.Builder, api.matrix.supervisor.Program.ProgramConfigOrBuilder>(
                    getConfig(),
                    getParentForChildren(),
                    isClean());
            config_ = null;
          }
          return configBuilder_;
        }

        private api.matrix.supervisor.Program.DaemonConfig daemon_;
        private com.google.protobuf.SingleFieldBuilderV3<
            api.matrix.supervisor.Program.DaemonConfig, api.matrix.supervisor.Program.DaemonConfig.Builder, api.matrix.supervisor.Program.DaemonConfigOrBuilder> daemonBuilder_;
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         * @return Whether the daemon field is set.
         */
        public boolean hasDaemon() {
          return daemonBuilder_ != null || daemon_ != null;
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         * @return The daemon.
         */
        public api.matrix.supervisor.Program.DaemonConfig getDaemon() {
          if (daemonBuilder_ == null) {
            return daemon_ == null ? api.matrix.supervisor.Program.DaemonConfig.getDefaultInstance() : daemon_;
          } else {
            return daemonBuilder_.getMessage();
          }
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        public Builder setDaemon(api.matrix.supervisor.Program.DaemonConfig value) {
          if (daemonBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            daemon_ = value;
            onChanged();
          } else {
            daemonBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        public Builder setDaemon(
            api.matrix.supervisor.Program.DaemonConfig.Builder builderForValue) {
          if (daemonBuilder_ == null) {
            daemon_ = builderForValue.build();
            onChanged();
          } else {
            daemonBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        public Builder mergeDaemon(api.matrix.supervisor.Program.DaemonConfig value) {
          if (daemonBuilder_ == null) {
            if (daemon_ != null) {
              daemon_ =
                api.matrix.supervisor.Program.DaemonConfig.newBuilder(daemon_).mergeFrom(value).buildPartial();
            } else {
              daemon_ = value;
            }
            onChanged();
          } else {
            daemonBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        public Builder clearDaemon() {
          if (daemonBuilder_ == null) {
            daemon_ = null;
            onChanged();
          } else {
            daemon_ = null;
            daemonBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        public api.matrix.supervisor.Program.DaemonConfig.Builder getDaemonBuilder() {
          
          onChanged();
          return getDaemonFieldBuilder().getBuilder();
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        public api.matrix.supervisor.Program.DaemonConfigOrBuilder getDaemonOrBuilder() {
          if (daemonBuilder_ != null) {
            return daemonBuilder_.getMessageOrBuilder();
          } else {
            return daemon_ == null ?
                api.matrix.supervisor.Program.DaemonConfig.getDefaultInstance() : daemon_;
          }
        }
        /**
         * <code>.api.supervisor.DaemonConfig daemon = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            api.matrix.supervisor.Program.DaemonConfig, api.matrix.supervisor.Program.DaemonConfig.Builder, api.matrix.supervisor.Program.DaemonConfigOrBuilder> 
            getDaemonFieldBuilder() {
          if (daemonBuilder_ == null) {
            daemonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                api.matrix.supervisor.Program.DaemonConfig, api.matrix.supervisor.Program.DaemonConfig.Builder, api.matrix.supervisor.Program.DaemonConfigOrBuilder>(
                    getDaemon(),
                    getParentForChildren(),
                    isClean());
            daemon_ = null;
          }
          return daemonBuilder_;
        }

        private java.lang.Object stdin_ = "";
        /**
         * <pre>
         * stdin to the program once started
         * </pre>
         *
         * <code>string stdin = 4;</code>
         * @return The stdin.
         */
        public java.lang.String getStdin() {
          java.lang.Object ref = stdin_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            stdin_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * stdin to the program once started
         * </pre>
         *
         * <code>string stdin = 4;</code>
         * @return The bytes for stdin.
         */
        public com.google.protobuf.ByteString
            getStdinBytes() {
          java.lang.Object ref = stdin_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stdin_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * stdin to the program once started
         * </pre>
         *
         * <code>string stdin = 4;</code>
         * @param value The stdin to set.
         * @return This builder for chaining.
         */
        public Builder setStdin(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          stdin_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * stdin to the program once started
         * </pre>
         *
         * <code>string stdin = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearStdin() {
          
          stdin_ = getDefaultInstance().getStdin();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * stdin to the program once started
         * </pre>
         *
         * <code>string stdin = 4;</code>
         * @param value The bytes for stdin to set.
         * @return This builder for chaining.
         */
        public Builder setStdinBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          stdin_ = value;
          onChanged();
          return this;
        }

        private int timeoutSec_ ;
        /**
         * <pre>
         * timeout seconds
         * </pre>
         *
         * <code>int32 timeout_sec = 5;</code>
         * @return The timeoutSec.
         */
        @java.lang.Override
        public int getTimeoutSec() {
          return timeoutSec_;
        }
        /**
         * <pre>
         * timeout seconds
         * </pre>
         *
         * <code>int32 timeout_sec = 5;</code>
         * @param value The timeoutSec to set.
         * @return This builder for chaining.
         */
        public Builder setTimeoutSec(int value) {
          
          timeoutSec_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * timeout seconds
         * </pre>
         *
         * <code>int32 timeout_sec = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeoutSec() {
          
          timeoutSec_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:api.supervisor.RegisterProgram.Request)
      }

      // @@protoc_insertion_point(class_scope:api.supervisor.RegisterProgram.Request)
      private static final api.matrix.supervisor.Program.RegisterProgram.Request DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new api.matrix.supervisor.Program.RegisterProgram.Request();
      }

      public static api.matrix.supervisor.Program.RegisterProgram.Request getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Request>
          PARSER = new com.google.protobuf.AbstractParser<Request>() {
        @java.lang.Override
        public Request parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Request> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Request> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.RegisterProgram.Request getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:api.supervisor.RegisterProgram.Response)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * Protobuf type {@code api.supervisor.RegisterProgram.Response}
     */
    public static final class Response extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:api.supervisor.RegisterProgram.Response)
        ResponseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Response.newBuilder() to construct.
      private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Response() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Response();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Response(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.RegisterProgram.Response.class, api.matrix.supervisor.Program.RegisterProgram.Response.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof api.matrix.supervisor.Program.RegisterProgram.Response)) {
          return super.equals(obj);
        }
        api.matrix.supervisor.Program.RegisterProgram.Response other = (api.matrix.supervisor.Program.RegisterProgram.Response) obj;

        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.RegisterProgram.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(api.matrix.supervisor.Program.RegisterProgram.Response prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code api.supervisor.RegisterProgram.Response}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:api.supervisor.RegisterProgram.Response)
          api.matrix.supervisor.Program.RegisterProgram.ResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Response_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Response_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  api.matrix.supervisor.Program.RegisterProgram.Response.class, api.matrix.supervisor.Program.RegisterProgram.Response.Builder.class);
        }

        // Construct using api.matrix.supervisor.Program.RegisterProgram.Response.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_Response_descriptor;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.RegisterProgram.Response getDefaultInstanceForType() {
          return api.matrix.supervisor.Program.RegisterProgram.Response.getDefaultInstance();
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.RegisterProgram.Response build() {
          api.matrix.supervisor.Program.RegisterProgram.Response result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.RegisterProgram.Response buildPartial() {
          api.matrix.supervisor.Program.RegisterProgram.Response result = new api.matrix.supervisor.Program.RegisterProgram.Response(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof api.matrix.supervisor.Program.RegisterProgram.Response) {
            return mergeFrom((api.matrix.supervisor.Program.RegisterProgram.Response)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(api.matrix.supervisor.Program.RegisterProgram.Response other) {
          if (other == api.matrix.supervisor.Program.RegisterProgram.Response.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          api.matrix.supervisor.Program.RegisterProgram.Response parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (api.matrix.supervisor.Program.RegisterProgram.Response) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:api.supervisor.RegisterProgram.Response)
      }

      // @@protoc_insertion_point(class_scope:api.supervisor.RegisterProgram.Response)
      private static final api.matrix.supervisor.Program.RegisterProgram.Response DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new api.matrix.supervisor.Program.RegisterProgram.Response();
      }

      public static api.matrix.supervisor.Program.RegisterProgram.Response getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Response>
          PARSER = new com.google.protobuf.AbstractParser<Response>() {
        @java.lang.Override
        public Response parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Response> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Response> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.RegisterProgram.Response getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof api.matrix.supervisor.Program.RegisterProgram)) {
        return super.equals(obj);
      }
      api.matrix.supervisor.Program.RegisterProgram other = (api.matrix.supervisor.Program.RegisterProgram) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.RegisterProgram parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(api.matrix.supervisor.Program.RegisterProgram prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code api.supervisor.RegisterProgram}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:api.supervisor.RegisterProgram)
        api.matrix.supervisor.Program.RegisterProgramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.RegisterProgram.class, api.matrix.supervisor.Program.RegisterProgram.Builder.class);
      }

      // Construct using api.matrix.supervisor.Program.RegisterProgram.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_RegisterProgram_descriptor;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.RegisterProgram getDefaultInstanceForType() {
        return api.matrix.supervisor.Program.RegisterProgram.getDefaultInstance();
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.RegisterProgram build() {
        api.matrix.supervisor.Program.RegisterProgram result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.RegisterProgram buildPartial() {
        api.matrix.supervisor.Program.RegisterProgram result = new api.matrix.supervisor.Program.RegisterProgram(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof api.matrix.supervisor.Program.RegisterProgram) {
          return mergeFrom((api.matrix.supervisor.Program.RegisterProgram)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(api.matrix.supervisor.Program.RegisterProgram other) {
        if (other == api.matrix.supervisor.Program.RegisterProgram.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        api.matrix.supervisor.Program.RegisterProgram parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (api.matrix.supervisor.Program.RegisterProgram) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:api.supervisor.RegisterProgram)
    }

    // @@protoc_insertion_point(class_scope:api.supervisor.RegisterProgram)
    private static final api.matrix.supervisor.Program.RegisterProgram DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new api.matrix.supervisor.Program.RegisterProgram();
    }

    public static api.matrix.supervisor.Program.RegisterProgram getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegisterProgram>
        PARSER = new com.google.protobuf.AbstractParser<RegisterProgram>() {
      @java.lang.Override
      public RegisterProgram parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterProgram(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterProgram> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterProgram> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public api.matrix.supervisor.Program.RegisterProgram getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnregisterProgramOrBuilder extends
      // @@protoc_insertion_point(interface_extends:api.supervisor.UnregisterProgram)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code api.supervisor.UnregisterProgram}
   */
  public static final class UnregisterProgram extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:api.supervisor.UnregisterProgram)
      UnregisterProgramOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnregisterProgram.newBuilder() to construct.
    private UnregisterProgram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnregisterProgram() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnregisterProgram();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnregisterProgram(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              api.matrix.supervisor.Program.UnregisterProgram.class, api.matrix.supervisor.Program.UnregisterProgram.Builder.class);
    }

    public interface RequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:api.supervisor.UnregisterProgram.Request)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>bool wait = 2;</code>
       * @return The wait.
       */
      boolean getWait();

      /**
       * <pre>
       * timeout seconds
       * </pre>
       *
       * <code>int32 timeout_sec = 3;</code>
       * @return The timeoutSec.
       */
      int getTimeoutSec();
    }
    /**
     * Protobuf type {@code api.supervisor.UnregisterProgram.Request}
     */
    public static final class Request extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:api.supervisor.UnregisterProgram.Request)
        RequestOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Request.newBuilder() to construct.
      private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Request() {
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Request();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Request(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 16: {

                wait_ = input.readBool();
                break;
              }
              case 24: {

                timeoutSec_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.UnregisterProgram.Request.class, api.matrix.supervisor.Program.UnregisterProgram.Request.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * program name
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int WAIT_FIELD_NUMBER = 2;
      private boolean wait_;
      /**
       * <code>bool wait = 2;</code>
       * @return The wait.
       */
      @java.lang.Override
      public boolean getWait() {
        return wait_;
      }

      public static final int TIMEOUT_SEC_FIELD_NUMBER = 3;
      private int timeoutSec_;
      /**
       * <pre>
       * timeout seconds
       * </pre>
       *
       * <code>int32 timeout_sec = 3;</code>
       * @return The timeoutSec.
       */
      @java.lang.Override
      public int getTimeoutSec() {
        return timeoutSec_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (wait_ != false) {
          output.writeBool(2, wait_);
        }
        if (timeoutSec_ != 0) {
          output.writeInt32(3, timeoutSec_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (wait_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, wait_);
        }
        if (timeoutSec_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, timeoutSec_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof api.matrix.supervisor.Program.UnregisterProgram.Request)) {
          return super.equals(obj);
        }
        api.matrix.supervisor.Program.UnregisterProgram.Request other = (api.matrix.supervisor.Program.UnregisterProgram.Request) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (getWait()
            != other.getWait()) return false;
        if (getTimeoutSec()
            != other.getTimeoutSec()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + WAIT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getWait());
        hash = (37 * hash) + TIMEOUT_SEC_FIELD_NUMBER;
        hash = (53 * hash) + getTimeoutSec();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(api.matrix.supervisor.Program.UnregisterProgram.Request prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code api.supervisor.UnregisterProgram.Request}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:api.supervisor.UnregisterProgram.Request)
          api.matrix.supervisor.Program.UnregisterProgram.RequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Request_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Request_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  api.matrix.supervisor.Program.UnregisterProgram.Request.class, api.matrix.supervisor.Program.UnregisterProgram.Request.Builder.class);
        }

        // Construct using api.matrix.supervisor.Program.UnregisterProgram.Request.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          wait_ = false;

          timeoutSec_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Request_descriptor;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.UnregisterProgram.Request getDefaultInstanceForType() {
          return api.matrix.supervisor.Program.UnregisterProgram.Request.getDefaultInstance();
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.UnregisterProgram.Request build() {
          api.matrix.supervisor.Program.UnregisterProgram.Request result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.UnregisterProgram.Request buildPartial() {
          api.matrix.supervisor.Program.UnregisterProgram.Request result = new api.matrix.supervisor.Program.UnregisterProgram.Request(this);
          result.name_ = name_;
          result.wait_ = wait_;
          result.timeoutSec_ = timeoutSec_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof api.matrix.supervisor.Program.UnregisterProgram.Request) {
            return mergeFrom((api.matrix.supervisor.Program.UnregisterProgram.Request)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(api.matrix.supervisor.Program.UnregisterProgram.Request other) {
          if (other == api.matrix.supervisor.Program.UnregisterProgram.Request.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (other.getWait() != false) {
            setWait(other.getWait());
          }
          if (other.getTimeoutSec() != 0) {
            setTimeoutSec(other.getTimeoutSec());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          api.matrix.supervisor.Program.UnregisterProgram.Request parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (api.matrix.supervisor.Program.UnregisterProgram.Request) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * program name
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private boolean wait_ ;
        /**
         * <code>bool wait = 2;</code>
         * @return The wait.
         */
        @java.lang.Override
        public boolean getWait() {
          return wait_;
        }
        /**
         * <code>bool wait = 2;</code>
         * @param value The wait to set.
         * @return This builder for chaining.
         */
        public Builder setWait(boolean value) {
          
          wait_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool wait = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearWait() {
          
          wait_ = false;
          onChanged();
          return this;
        }

        private int timeoutSec_ ;
        /**
         * <pre>
         * timeout seconds
         * </pre>
         *
         * <code>int32 timeout_sec = 3;</code>
         * @return The timeoutSec.
         */
        @java.lang.Override
        public int getTimeoutSec() {
          return timeoutSec_;
        }
        /**
         * <pre>
         * timeout seconds
         * </pre>
         *
         * <code>int32 timeout_sec = 3;</code>
         * @param value The timeoutSec to set.
         * @return This builder for chaining.
         */
        public Builder setTimeoutSec(int value) {
          
          timeoutSec_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * timeout seconds
         * </pre>
         *
         * <code>int32 timeout_sec = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeoutSec() {
          
          timeoutSec_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:api.supervisor.UnregisterProgram.Request)
      }

      // @@protoc_insertion_point(class_scope:api.supervisor.UnregisterProgram.Request)
      private static final api.matrix.supervisor.Program.UnregisterProgram.Request DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new api.matrix.supervisor.Program.UnregisterProgram.Request();
      }

      public static api.matrix.supervisor.Program.UnregisterProgram.Request getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Request>
          PARSER = new com.google.protobuf.AbstractParser<Request>() {
        @java.lang.Override
        public Request parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Request> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Request> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.UnregisterProgram.Request getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:api.supervisor.UnregisterProgram.Response)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * Protobuf type {@code api.supervisor.UnregisterProgram.Response}
     */
    public static final class Response extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:api.supervisor.UnregisterProgram.Response)
        ResponseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Response.newBuilder() to construct.
      private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Response() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Response();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Response(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.UnregisterProgram.Response.class, api.matrix.supervisor.Program.UnregisterProgram.Response.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof api.matrix.supervisor.Program.UnregisterProgram.Response)) {
          return super.equals(obj);
        }
        api.matrix.supervisor.Program.UnregisterProgram.Response other = (api.matrix.supervisor.Program.UnregisterProgram.Response) obj;

        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static api.matrix.supervisor.Program.UnregisterProgram.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(api.matrix.supervisor.Program.UnregisterProgram.Response prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code api.supervisor.UnregisterProgram.Response}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:api.supervisor.UnregisterProgram.Response)
          api.matrix.supervisor.Program.UnregisterProgram.ResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Response_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Response_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  api.matrix.supervisor.Program.UnregisterProgram.Response.class, api.matrix.supervisor.Program.UnregisterProgram.Response.Builder.class);
        }

        // Construct using api.matrix.supervisor.Program.UnregisterProgram.Response.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_Response_descriptor;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.UnregisterProgram.Response getDefaultInstanceForType() {
          return api.matrix.supervisor.Program.UnregisterProgram.Response.getDefaultInstance();
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.UnregisterProgram.Response build() {
          api.matrix.supervisor.Program.UnregisterProgram.Response result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public api.matrix.supervisor.Program.UnregisterProgram.Response buildPartial() {
          api.matrix.supervisor.Program.UnregisterProgram.Response result = new api.matrix.supervisor.Program.UnregisterProgram.Response(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof api.matrix.supervisor.Program.UnregisterProgram.Response) {
            return mergeFrom((api.matrix.supervisor.Program.UnregisterProgram.Response)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(api.matrix.supervisor.Program.UnregisterProgram.Response other) {
          if (other == api.matrix.supervisor.Program.UnregisterProgram.Response.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          api.matrix.supervisor.Program.UnregisterProgram.Response parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (api.matrix.supervisor.Program.UnregisterProgram.Response) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:api.supervisor.UnregisterProgram.Response)
      }

      // @@protoc_insertion_point(class_scope:api.supervisor.UnregisterProgram.Response)
      private static final api.matrix.supervisor.Program.UnregisterProgram.Response DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new api.matrix.supervisor.Program.UnregisterProgram.Response();
      }

      public static api.matrix.supervisor.Program.UnregisterProgram.Response getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Response>
          PARSER = new com.google.protobuf.AbstractParser<Response>() {
        @java.lang.Override
        public Response parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Response> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Response> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.UnregisterProgram.Response getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof api.matrix.supervisor.Program.UnregisterProgram)) {
        return super.equals(obj);
      }
      api.matrix.supervisor.Program.UnregisterProgram other = (api.matrix.supervisor.Program.UnregisterProgram) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static api.matrix.supervisor.Program.UnregisterProgram parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(api.matrix.supervisor.Program.UnregisterProgram prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code api.supervisor.UnregisterProgram}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:api.supervisor.UnregisterProgram)
        api.matrix.supervisor.Program.UnregisterProgramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                api.matrix.supervisor.Program.UnregisterProgram.class, api.matrix.supervisor.Program.UnregisterProgram.Builder.class);
      }

      // Construct using api.matrix.supervisor.Program.UnregisterProgram.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return api.matrix.supervisor.Program.internal_static_api_supervisor_UnregisterProgram_descriptor;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.UnregisterProgram getDefaultInstanceForType() {
        return api.matrix.supervisor.Program.UnregisterProgram.getDefaultInstance();
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.UnregisterProgram build() {
        api.matrix.supervisor.Program.UnregisterProgram result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public api.matrix.supervisor.Program.UnregisterProgram buildPartial() {
        api.matrix.supervisor.Program.UnregisterProgram result = new api.matrix.supervisor.Program.UnregisterProgram(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof api.matrix.supervisor.Program.UnregisterProgram) {
          return mergeFrom((api.matrix.supervisor.Program.UnregisterProgram)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(api.matrix.supervisor.Program.UnregisterProgram other) {
        if (other == api.matrix.supervisor.Program.UnregisterProgram.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        api.matrix.supervisor.Program.UnregisterProgram parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (api.matrix.supervisor.Program.UnregisterProgram) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:api.supervisor.UnregisterProgram)
    }

    // @@protoc_insertion_point(class_scope:api.supervisor.UnregisterProgram)
    private static final api.matrix.supervisor.Program.UnregisterProgram DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new api.matrix.supervisor.Program.UnregisterProgram();
    }

    public static api.matrix.supervisor.Program.UnregisterProgram getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnregisterProgram>
        PARSER = new com.google.protobuf.AbstractParser<UnregisterProgram>() {
      @java.lang.Override
      public UnregisterProgram parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnregisterProgram(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnregisterProgram> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnregisterProgram> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public api.matrix.supervisor.Program.UnregisterProgram getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_ProgramConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_ProgramConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_DaemonConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_DaemonConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_RegisterProgram_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_RegisterProgram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_RegisterProgram_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_RegisterProgram_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_RegisterProgram_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_RegisterProgram_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_UnregisterProgram_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_UnregisterProgram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_UnregisterProgram_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_UnregisterProgram_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_supervisor_UnregisterProgram_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_supervisor_UnregisterProgram_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034api/supervisor/program.proto\022\016api.supe" +
      "rvisor\032Agithub.com/envoyproxy/protoc-gen" +
      "-validate/validate/validate.proto\"\325\003\n\rPr" +
      "ogramConfig\022\030\n\007command\030\001 \001(\tB\007\372B\004r\002\020\001\022\021\n" +
      "\tdirectory\030\002 \001(\t\022/\n\013stop_signal\030\003 \001(\0162\032." +
      "api.supervisor.StopSignal\022\025\n\rstop_wait_s" +
      "ec\030\004 \001(\005\022\025\n\rstop_as_group\030\005 \001(\010\022\025\n\rkill_" +
      "as_group\030\006 \001(\010\022\027\n\017redirect_stderr\030\007 \001(\010\022" +
      "\026\n\016stdout_logfile\030\010 \001(\t\022\037\n\027stdout_logfil" +
      "e_maxbytes\030\t \001(\t\022\036\n\026stdout_logfile_backu" +
      "ps\030\n \001(\005\022\026\n\016stderr_logfile\030\013 \001(\t\022\037\n\027stde" +
      "rr_logfile_maxbytes\030\014 \001(\t\022\036\n\026stderr_logf" +
      "ile_backups\030\r \001(\005\022\014\n\004user\030\016 \001(\t\022\023\n\013envir" +
      "onment\030\017 \001(\t\022\r\n\005umask\030\020 \001(\t\022\021\n\tcgroup_v1" +
      "\030\021 \001(\t\022\021\n\tcgroup_v2\030\022 \001(\t\"\233\001\n\014DaemonConf" +
      "ig\022-\n\nauto_start\030\001 \001(\0162\031.api.supervisor." +
      "AutoStart\022\025\n\rstart_retries\030\002 \001(\005\0221\n\014auto" +
      "_restart\030\003 \001(\0162\033.api.supervisor.AutoRest" +
      "art\022\022\n\nexit_codes\030\004 \001(\t\"\301\001\n\017RegisterProg" +
      "ram\032\241\001\n\007Request\022\025\n\004name\030\001 \001(\tB\007\372B\004r\002\020\001\022-" +
      "\n\006config\030\002 \001(\0132\035.api.supervisor.ProgramC" +
      "onfig\022,\n\006daemon\030\003 \001(\0132\034.api.supervisor.D" +
      "aemonConfig\022\r\n\005stdin\030\004 \001(\t\022\023\n\013timeout_se" +
      "c\030\005 \001(\005\032\n\n\010Response\"d\n\021UnregisterProgram" +
      "\032C\n\007Request\022\025\n\004name\030\001 \001(\tB\007\372B\004r\002\020\001\022\014\n\004wa" +
      "it\030\002 \001(\010\022\023\n\013timeout_sec\030\003 \001(\005\032\n\n\010Respons" +
      "e*\244\001\n\nStopSignal\022\024\n\020STOP_SIGNAL_TERM\020\000\022\023" +
      "\n\017STOP_SIGNAL_INT\020\001\022\023\n\017STOP_SIGNAL_HUP\020\002" +
      "\022\024\n\020STOP_SIGNAL_QUIT\020\003\022\024\n\020STOP_SIGNAL_KI" +
      "LL\020\004\022\024\n\020STOP_SIGNAL_USR1\020\005\022\024\n\020STOP_SIGNA" +
      "L_USR2\020\006*2\n\tAutoStart\022\022\n\016AUTO_START_YES\020" +
      "\000\022\021\n\rAUTO_START_NO\020\001*U\n\013AutoRestart\022\033\n\027A" +
      "UTO_RESTART_UNEXPECTED\020\000\022\024\n\020AUTO_RESTART" +
      "_YES\020\001\022\023\n\017AUTO_RESTART_NO\020\002B\027\n\025api.matri" +
      "x.supervisorb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          api.io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_api_supervisor_ProgramConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_api_supervisor_ProgramConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_ProgramConfig_descriptor,
        new java.lang.String[] { "Command", "Directory", "StopSignal", "StopWaitSec", "StopAsGroup", "KillAsGroup", "RedirectStderr", "StdoutLogfile", "StdoutLogfileMaxbytes", "StdoutLogfileBackups", "StderrLogfile", "StderrLogfileMaxbytes", "StderrLogfileBackups", "User", "Environment", "Umask", "CgroupV1", "CgroupV2", });
    internal_static_api_supervisor_DaemonConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_api_supervisor_DaemonConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_DaemonConfig_descriptor,
        new java.lang.String[] { "AutoStart", "StartRetries", "AutoRestart", "ExitCodes", });
    internal_static_api_supervisor_RegisterProgram_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_api_supervisor_RegisterProgram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_RegisterProgram_descriptor,
        new java.lang.String[] { });
    internal_static_api_supervisor_RegisterProgram_Request_descriptor =
      internal_static_api_supervisor_RegisterProgram_descriptor.getNestedTypes().get(0);
    internal_static_api_supervisor_RegisterProgram_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_RegisterProgram_Request_descriptor,
        new java.lang.String[] { "Name", "Config", "Daemon", "Stdin", "TimeoutSec", });
    internal_static_api_supervisor_RegisterProgram_Response_descriptor =
      internal_static_api_supervisor_RegisterProgram_descriptor.getNestedTypes().get(1);
    internal_static_api_supervisor_RegisterProgram_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_RegisterProgram_Response_descriptor,
        new java.lang.String[] { });
    internal_static_api_supervisor_UnregisterProgram_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_api_supervisor_UnregisterProgram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_UnregisterProgram_descriptor,
        new java.lang.String[] { });
    internal_static_api_supervisor_UnregisterProgram_Request_descriptor =
      internal_static_api_supervisor_UnregisterProgram_descriptor.getNestedTypes().get(0);
    internal_static_api_supervisor_UnregisterProgram_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_UnregisterProgram_Request_descriptor,
        new java.lang.String[] { "Name", "Wait", "TimeoutSec", });
    internal_static_api_supervisor_UnregisterProgram_Response_descriptor =
      internal_static_api_supervisor_UnregisterProgram_descriptor.getNestedTypes().get(1);
    internal_static_api_supervisor_UnregisterProgram_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_supervisor_UnregisterProgram_Response_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(api.io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    api.io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
